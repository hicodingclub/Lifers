/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var errorCss = "\n.meanExpressAngularError {\n    visibility: hidden; \n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n    min-width: 250px; \n    max-width: 60%;\n    left: 50%;\n    top: 20%;\n    transform: translate(-50%, 0);\n    position: fixed; \n    z-index: 10; \n}\n.meanExpressAngularError.show {\n    visibility: visible; \n}\n\n.meanExpressAngularErrorMoreLink {\n    display: none;\n}\n.meanExpressAngularErrorMoreLink.show {\n    display: block;\n}\n.meanExpressAngularErrorMore {\n    display: none;\n    font-size: 0.75rem;\n    font-color: black;\n    background-color: gray;\n}\n.meanExpressAngularErrorMore.show {\n    display: block;\n}\n";
var ErrorToastConfig = /** @class */ (function () {
    function ErrorToastConfig() {
    }
    return ErrorToastConfig;
}());
export { ErrorToastConfig };
if (false) {
    /** @type {?} */
    ErrorToastConfig.prototype.content;
    /** @type {?} */
    ErrorToastConfig.prototype.more;
}
var ErrorToast = /** @class */ (function () {
    function ErrorToast(config) {
        this.config = config;
    }
    /**
     * @private
     * @return {?}
     */
    ErrorToast.prototype.getHtml = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var id = 'meanExpressAngularError' + Date.now();
        /** @type {?} */
        var errorHtml = "\n<div class=\"alert alert-danger fade in alert-dismissible meanExpressAngularError\"\n    id=\"" + id + "\">\n <button type=\"button\" class=\"close\" aria-label=\"Close\" id=\"button" + id + "\">\n    <span aria-hidden=\"true\" style=\"font-size:20px\">\u00D7</span>\n  </button>\n  <div>\n    <strong>Error!</strong>\n  </div>\n  <div id=\"content" + id + "\">\n  </div>\n  <a id=\"link" + id + "\" class=\"meanExpressAngularErrorMoreLink\" href=\".\" >Show more details...\n  </a>\n  <div id=\"more" + id + "\" class=\"meanExpressAngularErrorMore\">\n  </div>\n</div>\n";
        return { id: id, html: errorHtml };
    };
    /**
     * @return {?}
     */
    ErrorToast.prototype.show = /**
     * @return {?}
     */
    function () {
        if (!$('#meanExpressAngularErrorCss').length) {
            $("<style type='text/css' id='meanExpressAngularErrorCss'>" + errorCss + "</style>").appendTo("head");
        }
        /** @type {?} */
        var html = this.getHtml();
        /** @type {?} */
        var selector = '#' + html.id;
        /** @type {?} */
        var contentSelector = '#content' + html.id;
        /** @type {?} */
        var moreSelector = '#more' + html.id;
        /** @type {?} */
        var linkSelector = '#link' + html.id;
        /** @type {?} */
        var buttonSelector = '#button' + html.id;
        $('body').append(html.html);
        $(contentSelector).append(this.config.content);
        if (this.config.more) {
            $(moreSelector).append(this.config.more);
            $(linkSelector).addClass("show");
            $(linkSelector).click(function (event) {
                event.preventDefault();
                $(moreSelector).addClass("show");
            });
        }
        $(buttonSelector).click(function (event) { $(selector).removeClass("show"); });
        $(selector).addClass("show");
    };
    return ErrorToast;
}());
export { ErrorToast };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ErrorToast.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5lcnJvcnRvYXN0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWVhbi1yZXN0LWFuZ3VsYXIvIiwic291cmNlcyI6WyJ1dGlsLmVycm9ydG9hc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7SUFBSSxRQUFRLEdBQUcsbXFCQStCZDtBQUlEO0lBQUE7SUFHQSxDQUFDO0lBQUQsdUJBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQzs7OztJQUZHLG1DQUFnQjs7SUFDaEIsZ0NBQWE7O0FBR2pCO0lBRUksb0JBQW9CLE1BQXdCO1FBQXhCLFdBQU0sR0FBTixNQUFNLENBQWtCO0lBQUksQ0FBQzs7Ozs7SUFDekMsNEJBQU87Ozs7SUFBZjs7WUFDUSxFQUFFLEdBQUcseUJBQXlCLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRTs7WUFDM0MsU0FBUyxHQUFHLGtHQUVmLEdBQUMsRUFBRSxHQUFDLGdGQUNzRCxHQUFDLEVBQUUsR0FBQyw4SkFNcEQsR0FBQyxFQUFFLEdBQUMsK0JBRVQsR0FBQyxFQUFFLEdBQUMseUdBRUYsR0FBQyxFQUFFLEdBQUMsK0RBR25CO1FBQ08sT0FBTyxFQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFTSx5QkFBSTs7O0lBQVg7UUFDSSxJQUFJLENBQUMsQ0FBQyxDQUFDLDZCQUE2QixDQUFDLENBQUMsTUFBTSxFQUFFO1lBQzFDLENBQUMsQ0FBQyx5REFBeUQsR0FBRyxRQUFRLEdBQUcsVUFBVSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3pHOztZQUNHLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFOztZQUNyQixRQUFRLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUN4QixlQUFlLEdBQUcsVUFBVSxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUN0QyxZQUFZLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUNoQyxZQUFZLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUNoQyxjQUFjLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxFQUFFO1FBQ3hDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMvQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ2xCLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2pDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBUyxLQUFLO2dCQUNoQyxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDckMsQ0FBQyxDQUFDLENBQUM7U0FDTjtRQUNELENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBUyxLQUFLLElBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDO1FBRTVFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVMLGlCQUFDO0FBQUQsQ0FBQyxBQWxERCxJQWtEQzs7Ozs7OztJQWhEZSw0QkFBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXJyb3JDc3MgPSBgXG4ubWVhbkV4cHJlc3NBbmd1bGFyRXJyb3Ige1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLDAsMCwwLjE5KTtcbiAgICBtaW4td2lkdGg6IDI1MHB4OyBcbiAgICBtYXgtd2lkdGg6IDYwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiAyMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gICAgcG9zaXRpb246IGZpeGVkOyBcbiAgICB6LWluZGV4OiAxMDsgXG59XG4ubWVhbkV4cHJlc3NBbmd1bGFyRXJyb3Iuc2hvdyB7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTsgXG59XG5cbi5tZWFuRXhwcmVzc0FuZ3VsYXJFcnJvck1vcmVMaW5rIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuLm1lYW5FeHByZXNzQW5ndWxhckVycm9yTW9yZUxpbmsuc2hvdyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4ubWVhbkV4cHJlc3NBbmd1bGFyRXJyb3JNb3JlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LWNvbG9yOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xufVxuLm1lYW5FeHByZXNzQW5ndWxhckVycm9yTW9yZS5zaG93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cbmA7XG5cbmRlY2xhcmUgdmFyICQ6IGFueTtcblxuZXhwb3J0IGNsYXNzIEVycm9yVG9hc3RDb25maWcge1xuICAgIGNvbnRlbnQ6IHN0cmluZztcbiAgICBtb3JlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBFcnJvclRvYXN0IHtcbiAgICBcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbmZpZzogRXJyb3JUb2FzdENvbmZpZyApIHt9XG4gICAgcHJpdmF0ZSBnZXRIdG1sKCkge1xuICAgICAgICB2YXIgaWQgPSAnbWVhbkV4cHJlc3NBbmd1bGFyRXJyb3InICsgRGF0ZS5ub3coKTtcbiAgICAgICAgdmFyIGVycm9ySHRtbCA9IGBcbjxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXIgZmFkZSBpbiBhbGVydC1kaXNtaXNzaWJsZSBtZWFuRXhwcmVzc0FuZ3VsYXJFcnJvclwiXG4gICAgaWQ9XCJgK2lkK2BcIj5cbiA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCIgaWQ9XCJidXR0b25gK2lkK2BcIj5cbiAgICA8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT1cImZvbnQtc2l6ZToyMHB4XCI+w5c8L3NwYW4+XG4gIDwvYnV0dG9uPlxuICA8ZGl2PlxuICAgIDxzdHJvbmc+RXJyb3IhPC9zdHJvbmc+XG4gIDwvZGl2PlxuICA8ZGl2IGlkPVwiY29udGVudGAraWQrYFwiPlxuICA8L2Rpdj5cbiAgPGEgaWQ9XCJsaW5rYCtpZCtgXCIgY2xhc3M9XCJtZWFuRXhwcmVzc0FuZ3VsYXJFcnJvck1vcmVMaW5rXCIgaHJlZj1cIi5cIiA+U2hvdyBtb3JlIGRldGFpbHMuLi5cbiAgPC9hPlxuICA8ZGl2IGlkPVwibW9yZWAraWQrYFwiIGNsYXNzPVwibWVhbkV4cHJlc3NBbmd1bGFyRXJyb3JNb3JlXCI+XG4gIDwvZGl2PlxuPC9kaXY+XG5gO1xuICAgICAgICByZXR1cm4ge2lkOiBpZCwgaHRtbDogZXJyb3JIdG1sfTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvdygpIHtcbiAgICAgICAgaWYgKCEkKCcjbWVhbkV4cHJlc3NBbmd1bGFyRXJyb3JDc3MnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICQoXCI8c3R5bGUgdHlwZT0ndGV4dC9jc3MnIGlkPSdtZWFuRXhwcmVzc0FuZ3VsYXJFcnJvckNzcyc+XCIgKyBlcnJvckNzcyArIFwiPC9zdHlsZT5cIikuYXBwZW5kVG8oXCJoZWFkXCIpOyBcbiAgICAgICAgfVxuICAgICAgICB2YXIgaHRtbCA9IHRoaXMuZ2V0SHRtbCgpO1xuICAgICAgICB2YXIgc2VsZWN0b3IgPSAnIycgKyBodG1sLmlkO1xuICAgICAgICB2YXIgY29udGVudFNlbGVjdG9yID0gJyNjb250ZW50JyArIGh0bWwuaWQ7XG4gICAgICAgIHZhciBtb3JlU2VsZWN0b3IgPSAnI21vcmUnICsgaHRtbC5pZDtcbiAgICAgICAgdmFyIGxpbmtTZWxlY3RvciA9ICcjbGluaycgKyBodG1sLmlkO1xuICAgICAgICB2YXIgYnV0dG9uU2VsZWN0b3IgPSAnI2J1dHRvbicgKyBodG1sLmlkO1xuICAgICAgICAkKCdib2R5JykuYXBwZW5kKGh0bWwuaHRtbCk7XG4gICAgICAgICQoY29udGVudFNlbGVjdG9yKS5hcHBlbmQodGhpcy5jb25maWcuY29udGVudCk7XG4gICAgICAgIGlmICh0aGlzLmNvbmZpZy5tb3JlKSB7XG4gICAgICAgICAgICAkKG1vcmVTZWxlY3RvcikuYXBwZW5kKHRoaXMuY29uZmlnLm1vcmUpO1xuICAgICAgICAgICAgJChsaW5rU2VsZWN0b3IpLmFkZENsYXNzKFwic2hvd1wiKTtcbiAgICAgICAgICAgICQobGlua1NlbGVjdG9yKS5jbGljayhmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgJChtb3JlU2VsZWN0b3IpLmFkZENsYXNzKFwic2hvd1wiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgICQoYnV0dG9uU2VsZWN0b3IpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7JChzZWxlY3RvcikucmVtb3ZlQ2xhc3MoXCJzaG93XCIpO30pO1xuICAgICAgICBcbiAgICAgICAgJChzZWxlY3RvcikuYWRkQ2xhc3MoXCJzaG93XCIpO1xuICAgIH1cblxufVxuIl19