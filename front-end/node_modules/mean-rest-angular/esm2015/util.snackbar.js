/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var snackBarCss = `
.meanExpressAngularSnackBar {
    visibility: hidden;
    min-width: 250px;
    margin-left: -125px;
    background-color: #333;
    color: #fff;
    text-align: center; 
    border-radius: 2px; 
    padding: 16px; 
    position: fixed;
    z-index: 1;
    left: 50%;
    bottom: 30px;
}

.meanExpressAngularSnackBar.show {
    visibility: visible;

    -webkit-animation: snackbarfadein 0.5s, snackbarfadeout 0.5s 2.5s;
    animation: snackbarfadein 0.5s, snackbarfadeout 0.5s 2.5s;
}

@-webkit-keyframes snackbarfadein {
    from {bottom: 0; opacity: 0;} 
    to {bottom: 30px; opacity: 1;}
}

@keyframes snackbarfadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes snackbarfadeout {
    from {bottom: 30px; opacity: 1;} 
    to {bottom: 0; opacity: 0;}
}

@keyframes snackbarfadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
}
`;
export class SnackBarConfig {
}
if (false) {
    /** @type {?} */
    SnackBarConfig.prototype.content;
}
export class SnackBar {
    /**
     * @param {?} config
     */
    constructor(config) {
        this.config = config;
    }
    /**
     * @private
     * @return {?}
     */
    getHtml() {
        /** @type {?} */
        var id = 'meanExpressAngularSnackBar' + Date.now();
        /** @type {?} */
        var snackBarHtml = `
<div class="meanExpressAngularSnackBar" id="` + id + `">

</div>
`;
        return { id: id, html: snackBarHtml };
    }
    /**
     * @return {?}
     */
    show() {
        if (!$('#meanExpressAngularSnackBarCss').length) {
            $("<style type='text/css' id='meanExpressAngularSnackBarCss'>" + snackBarCss + "</style>").appendTo("head");
        }
        /** @type {?} */
        var html = this.getHtml();
        /** @type {?} */
        var selector = '#' + html.id;
        $('body').append(html.html);
        $(selector).append(this.config.content);
        $(selector).addClass("show");
        setTimeout(function () {
            $(selector).removeClass("show");
            setTimeout(function () { $(selector).remove(); }, 500);
        }, 3000);
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    SnackBar.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5zbmFja2Jhci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21lYW4tcmVzdC1hbmd1bGFyLyIsInNvdXJjZXMiOlsidXRpbC5zbmFja2Jhci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztJQUFJLFdBQVcsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBMENqQjtBQUdELE1BQU0sT0FBTyxjQUFjO0NBRTFCOzs7SUFERyxpQ0FBZ0I7O0FBR3BCLE1BQU0sT0FBTyxRQUFROzs7O0lBRWpCLFlBQW9CLE1BQXNCO1FBQXRCLFdBQU0sR0FBTixNQUFNLENBQWdCO0lBQUksQ0FBQzs7Ozs7SUFDdkMsT0FBTzs7WUFDUCxFQUFFLEdBQUcsNEJBQTRCLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRTs7WUFDOUMsWUFBWSxHQUFHOzZDQUNrQixHQUFHLEVBQUUsR0FBRzs7O0NBR3BEO1FBQ08sT0FBTyxFQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBQyxDQUFDO0lBQ3hDLENBQUM7Ozs7SUFFTSxJQUFJO1FBQ1AsSUFBSSxDQUFDLENBQUMsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLE1BQU0sRUFBRTtZQUM3QyxDQUFDLENBQUMsNERBQTRELEdBQUcsV0FBVyxHQUFHLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvRzs7WUFFRyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTs7WUFDckIsUUFBUSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRTtRQUM1QixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFeEMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU3QixVQUFVLENBQUM7WUFDUCxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2hDLFVBQVUsQ0FBQyxjQUFXLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFBLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUN0RCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDZCxDQUFDO0NBRUo7Ozs7OztJQTdCZSwwQkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc25hY2tCYXJDc3MgPSBgXG4ubWVhbkV4cHJlc3NBbmd1bGFyU25hY2tCYXIge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDI1MHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTI1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxuICAgIGJvcmRlci1yYWRpdXM6IDJweDsgXG4gICAgcGFkZGluZzogMTZweDsgXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDE7XG4gICAgbGVmdDogNTAlO1xuICAgIGJvdHRvbTogMzBweDtcbn1cblxuLm1lYW5FeHByZXNzQW5ndWxhclNuYWNrQmFyLnNob3cge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG5cbiAgICAtd2Via2l0LWFuaW1hdGlvbjogc25hY2tiYXJmYWRlaW4gMC41cywgc25hY2tiYXJmYWRlb3V0IDAuNXMgMi41cztcbiAgICBhbmltYXRpb246IHNuYWNrYmFyZmFkZWluIDAuNXMsIHNuYWNrYmFyZmFkZW91dCAwLjVzIDIuNXM7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzbmFja2JhcmZhZGVpbiB7XG4gICAgZnJvbSB7Ym90dG9tOiAwOyBvcGFjaXR5OiAwO30gXG4gICAgdG8ge2JvdHRvbTogMzBweDsgb3BhY2l0eTogMTt9XG59XG5cbkBrZXlmcmFtZXMgc25hY2tiYXJmYWRlaW4ge1xuICAgIGZyb20ge2JvdHRvbTogMDsgb3BhY2l0eTogMDt9XG4gICAgdG8ge2JvdHRvbTogMzBweDsgb3BhY2l0eTogMTt9XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzbmFja2JhcmZhZGVvdXQge1xuICAgIGZyb20ge2JvdHRvbTogMzBweDsgb3BhY2l0eTogMTt9IFxuICAgIHRvIHtib3R0b206IDA7IG9wYWNpdHk6IDA7fVxufVxuXG5Aa2V5ZnJhbWVzIHNuYWNrYmFyZmFkZW91dCB7XG4gICAgZnJvbSB7Ym90dG9tOiAzMHB4OyBvcGFjaXR5OiAxO31cbiAgICB0byB7Ym90dG9tOiAwOyBvcGFjaXR5OiAwO31cbn1cbmA7XG5kZWNsYXJlIHZhciAkOiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBTbmFja0JhckNvbmZpZyB7XG4gICAgY29udGVudDogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgU25hY2tCYXIge1xuICAgIFxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgY29uZmlnOiBTbmFja0JhckNvbmZpZyApIHt9XG4gICAgcHJpdmF0ZSBnZXRIdG1sKCkge1xuICAgICAgICB2YXIgaWQgPSAnbWVhbkV4cHJlc3NBbmd1bGFyU25hY2tCYXInICsgRGF0ZS5ub3coKTtcbiAgICAgICAgdmFyIHNuYWNrQmFySHRtbCA9IGBcbjxkaXYgY2xhc3M9XCJtZWFuRXhwcmVzc0FuZ3VsYXJTbmFja0JhclwiIGlkPVwiYCArIGlkICsgYFwiPlxuXG48L2Rpdj5cbmA7XG4gICAgICAgIHJldHVybiB7aWQ6IGlkLCBodG1sOiBzbmFja0Jhckh0bWx9O1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93KCkge1xuICAgICAgICBpZiAoISQoJyNtZWFuRXhwcmVzc0FuZ3VsYXJTbmFja0JhckNzcycpLmxlbmd0aCkge1xuICAgICAgICAgICAgJChcIjxzdHlsZSB0eXBlPSd0ZXh0L2NzcycgaWQ9J21lYW5FeHByZXNzQW5ndWxhclNuYWNrQmFyQ3NzJz5cIiArIHNuYWNrQmFyQ3NzICsgXCI8L3N0eWxlPlwiKS5hcHBlbmRUbyhcImhlYWRcIik7IFxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB2YXIgaHRtbCA9IHRoaXMuZ2V0SHRtbCgpO1xuICAgICAgICB2YXIgc2VsZWN0b3IgPSAnIycgKyBodG1sLmlkO1xuICAgICAgICAkKCdib2R5JykuYXBwZW5kKGh0bWwuaHRtbCk7XG4gICAgICAgICQoc2VsZWN0b3IpLmFwcGVuZCh0aGlzLmNvbmZpZy5jb250ZW50KTtcblxuICAgICAgICAkKHNlbGVjdG9yKS5hZGRDbGFzcyhcInNob3dcIik7XG4gICAgICAgIFxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IFxuICAgICAgICAgICAgJChzZWxlY3RvcikucmVtb3ZlQ2xhc3MoXCJzaG93XCIpO1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyQoc2VsZWN0b3IpLnJlbW92ZSgpO30sIDUwMCk7XG4gICAgICAgICB9LCAzMDAwKTtcbiAgICB9XG5cbn1cbiJdfQ==