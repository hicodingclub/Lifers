/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var errorCss = `
.meanExpressAngularError {
    visibility: hidden; 
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    min-width: 250px; 
    max-width: 60%;
    left: 50%;
    top: 20%;
    transform: translate(-50%, 0);
    position: fixed; 
    z-index: 10; 
}
.meanExpressAngularError.show {
    visibility: visible; 
}

.meanExpressAngularErrorMoreLink {
    display: none;
}
.meanExpressAngularErrorMoreLink.show {
    display: block;
}
.meanExpressAngularErrorMore {
    display: none;
    font-size: 0.75rem;
    font-color: black;
    background-color: gray;
}
.meanExpressAngularErrorMore.show {
    display: block;
}
`;
export class ErrorToastConfig {
}
if (false) {
    /** @type {?} */
    ErrorToastConfig.prototype.content;
    /** @type {?} */
    ErrorToastConfig.prototype.more;
}
export class ErrorToast {
    /**
     * @param {?} config
     */
    constructor(config) {
        this.config = config;
    }
    /**
     * @private
     * @return {?}
     */
    getHtml() {
        /** @type {?} */
        var id = 'meanExpressAngularError' + Date.now();
        /** @type {?} */
        var errorHtml = `
<div class="alert alert-danger fade in alert-dismissible meanExpressAngularError"
    id="` + id + `">
 <button type="button" class="close" aria-label="Close" id="button` + id + `">
    <span aria-hidden="true" style="font-size:20px">Ã—</span>
  </button>
  <div>
    <strong>Error!</strong>
  </div>
  <div id="content` + id + `">
  </div>
  <a id="link` + id + `" class="meanExpressAngularErrorMoreLink" href="." >Show more details...
  </a>
  <div id="more` + id + `" class="meanExpressAngularErrorMore">
  </div>
</div>
`;
        return { id: id, html: errorHtml };
    }
    /**
     * @return {?}
     */
    show() {
        if (!$('#meanExpressAngularErrorCss').length) {
            $("<style type='text/css' id='meanExpressAngularErrorCss'>" + errorCss + "</style>").appendTo("head");
        }
        /** @type {?} */
        var html = this.getHtml();
        /** @type {?} */
        var selector = '#' + html.id;
        /** @type {?} */
        var contentSelector = '#content' + html.id;
        /** @type {?} */
        var moreSelector = '#more' + html.id;
        /** @type {?} */
        var linkSelector = '#link' + html.id;
        /** @type {?} */
        var buttonSelector = '#button' + html.id;
        $('body').append(html.html);
        $(contentSelector).append(this.config.content);
        if (this.config.more) {
            $(moreSelector).append(this.config.more);
            $(linkSelector).addClass("show");
            $(linkSelector).click(function (event) {
                event.preventDefault();
                $(moreSelector).addClass("show");
            });
        }
        $(buttonSelector).click(function (event) { $(selector).removeClass("show"); });
        $(selector).addClass("show");
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    ErrorToast.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5lcnJvcnRvYXN0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWVhbi1yZXN0LWFuZ3VsYXIvIiwic291cmNlcyI6WyJ1dGlsLmVycm9ydG9hc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7SUFBSSxRQUFRLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0ErQmQ7QUFJRCxNQUFNLE9BQU8sZ0JBQWdCO0NBRzVCOzs7SUFGRyxtQ0FBZ0I7O0lBQ2hCLGdDQUFhOztBQUdqQixNQUFNLE9BQU8sVUFBVTs7OztJQUVuQixZQUFvQixNQUF3QjtRQUF4QixXQUFNLEdBQU4sTUFBTSxDQUFrQjtJQUFJLENBQUM7Ozs7O0lBQ3pDLE9BQU87O1lBQ1AsRUFBRSxHQUFHLHlCQUF5QixHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUU7O1lBQzNDLFNBQVMsR0FBRzs7U0FFZixHQUFDLEVBQUUsR0FBQzttRUFDc0QsR0FBQyxFQUFFLEdBQUM7Ozs7OzttQkFNcEQsR0FBQyxFQUFFLEdBQUM7O2NBRVQsR0FBQyxFQUFFLEdBQUM7O2dCQUVGLEdBQUMsRUFBRSxHQUFDOzs7Q0FHbkI7UUFDTyxPQUFPLEVBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFDLENBQUM7SUFDckMsQ0FBQzs7OztJQUVNLElBQUk7UUFDUCxJQUFJLENBQUMsQ0FBQyxDQUFDLDZCQUE2QixDQUFDLENBQUMsTUFBTSxFQUFFO1lBQzFDLENBQUMsQ0FBQyx5REFBeUQsR0FBRyxRQUFRLEdBQUcsVUFBVSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3pHOztZQUNHLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFOztZQUNyQixRQUFRLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUN4QixlQUFlLEdBQUcsVUFBVSxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUN0QyxZQUFZLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUNoQyxZQUFZLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFFOztZQUNoQyxjQUFjLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxFQUFFO1FBQ3hDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMvQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ2xCLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2pDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBUyxLQUFLO2dCQUNoQyxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDckMsQ0FBQyxDQUFDLENBQUM7U0FDTjtRQUNELENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBUyxLQUFLLElBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDO1FBRTVFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUVKOzs7Ozs7SUFoRGUsNEJBQWdDIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGVycm9yQ3NzID0gYFxuLm1lYW5FeHByZXNzQW5ndWxhckVycm9yIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47IFxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwwLDAsMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwwLDAsMC4xOSk7XG4gICAgbWluLXdpZHRoOiAyNTBweDsgXG4gICAgbWF4LXdpZHRoOiA2MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRvcDogMjAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDApO1xuICAgIHBvc2l0aW9uOiBmaXhlZDsgXG4gICAgei1pbmRleDogMTA7IFxufVxuLm1lYW5FeHByZXNzQW5ndWxhckVycm9yLnNob3cge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7IFxufVxuXG4ubWVhbkV4cHJlc3NBbmd1bGFyRXJyb3JNb3JlTGluayB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbi5tZWFuRXhwcmVzc0FuZ3VsYXJFcnJvck1vcmVMaW5rLnNob3cge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuLm1lYW5FeHByZXNzQW5ndWxhckVycm9yTW9yZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgZm9udC1jb2xvcjogYmxhY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbn1cbi5tZWFuRXhwcmVzc0FuZ3VsYXJFcnJvck1vcmUuc2hvdyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5gO1xuXG5kZWNsYXJlIHZhciAkOiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBFcnJvclRvYXN0Q29uZmlnIHtcbiAgICBjb250ZW50OiBzdHJpbmc7XG4gICAgbW9yZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgRXJyb3JUb2FzdCB7XG4gICAgXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBjb25maWc6IEVycm9yVG9hc3RDb25maWcgKSB7fVxuICAgIHByaXZhdGUgZ2V0SHRtbCgpIHtcbiAgICAgICAgdmFyIGlkID0gJ21lYW5FeHByZXNzQW5ndWxhckVycm9yJyArIERhdGUubm93KCk7XG4gICAgICAgIHZhciBlcnJvckh0bWwgPSBgXG48ZGl2IGNsYXNzPVwiYWxlcnQgYWxlcnQtZGFuZ2VyIGZhZGUgaW4gYWxlcnQtZGlzbWlzc2libGUgbWVhbkV4cHJlc3NBbmd1bGFyRXJyb3JcIlxuICAgIGlkPVwiYCtpZCtgXCI+XG4gPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJjbG9zZVwiIGFyaWEtbGFiZWw9XCJDbG9zZVwiIGlkPVwiYnV0dG9uYCtpZCtgXCI+XG4gICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCIgc3R5bGU9XCJmb250LXNpemU6MjBweFwiPsOXPC9zcGFuPlxuICA8L2J1dHRvbj5cbiAgPGRpdj5cbiAgICA8c3Ryb25nPkVycm9yITwvc3Ryb25nPlxuICA8L2Rpdj5cbiAgPGRpdiBpZD1cImNvbnRlbnRgK2lkK2BcIj5cbiAgPC9kaXY+XG4gIDxhIGlkPVwibGlua2AraWQrYFwiIGNsYXNzPVwibWVhbkV4cHJlc3NBbmd1bGFyRXJyb3JNb3JlTGlua1wiIGhyZWY9XCIuXCIgPlNob3cgbW9yZSBkZXRhaWxzLi4uXG4gIDwvYT5cbiAgPGRpdiBpZD1cIm1vcmVgK2lkK2BcIiBjbGFzcz1cIm1lYW5FeHByZXNzQW5ndWxhckVycm9yTW9yZVwiPlxuICA8L2Rpdj5cbjwvZGl2PlxuYDtcbiAgICAgICAgcmV0dXJuIHtpZDogaWQsIGh0bWw6IGVycm9ySHRtbH07XG4gICAgfVxuXG4gICAgcHVibGljIHNob3coKSB7XG4gICAgICAgIGlmICghJCgnI21lYW5FeHByZXNzQW5ndWxhckVycm9yQ3NzJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAkKFwiPHN0eWxlIHR5cGU9J3RleHQvY3NzJyBpZD0nbWVhbkV4cHJlc3NBbmd1bGFyRXJyb3JDc3MnPlwiICsgZXJyb3JDc3MgKyBcIjwvc3R5bGU+XCIpLmFwcGVuZFRvKFwiaGVhZFwiKTsgXG4gICAgICAgIH1cbiAgICAgICAgdmFyIGh0bWwgPSB0aGlzLmdldEh0bWwoKTtcbiAgICAgICAgdmFyIHNlbGVjdG9yID0gJyMnICsgaHRtbC5pZDtcbiAgICAgICAgdmFyIGNvbnRlbnRTZWxlY3RvciA9ICcjY29udGVudCcgKyBodG1sLmlkO1xuICAgICAgICB2YXIgbW9yZVNlbGVjdG9yID0gJyNtb3JlJyArIGh0bWwuaWQ7XG4gICAgICAgIHZhciBsaW5rU2VsZWN0b3IgPSAnI2xpbmsnICsgaHRtbC5pZDtcbiAgICAgICAgdmFyIGJ1dHRvblNlbGVjdG9yID0gJyNidXR0b24nICsgaHRtbC5pZDtcbiAgICAgICAgJCgnYm9keScpLmFwcGVuZChodG1sLmh0bWwpO1xuICAgICAgICAkKGNvbnRlbnRTZWxlY3RvcikuYXBwZW5kKHRoaXMuY29uZmlnLmNvbnRlbnQpO1xuICAgICAgICBpZiAodGhpcy5jb25maWcubW9yZSkge1xuICAgICAgICAgICAgJChtb3JlU2VsZWN0b3IpLmFwcGVuZCh0aGlzLmNvbmZpZy5tb3JlKTtcbiAgICAgICAgICAgICQobGlua1NlbGVjdG9yKS5hZGRDbGFzcyhcInNob3dcIik7XG4gICAgICAgICAgICAkKGxpbmtTZWxlY3RvcikuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICQobW9yZVNlbGVjdG9yKS5hZGRDbGFzcyhcInNob3dcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAkKGJ1dHRvblNlbGVjdG9yKS5jbGljayhmdW5jdGlvbihldmVudCkgeyQoc2VsZWN0b3IpLnJlbW92ZUNsYXNzKFwic2hvd1wiKTt9KTtcbiAgICAgICAgXG4gICAgICAgICQoc2VsZWN0b3IpLmFkZENsYXNzKFwic2hvd1wiKTtcbiAgICB9XG5cbn1cbiJdfQ==