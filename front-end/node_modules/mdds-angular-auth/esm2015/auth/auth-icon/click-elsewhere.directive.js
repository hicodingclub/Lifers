/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, EventEmitter, ElementRef, HostListener, Output } from '@angular/core';
export class ClickElsewhereDirective {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.clickElsewhere = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onDocumentClick(event) {
        /** @type {?} */
        const targetElement = (/** @type {?} */ (event.target));
        // Check if the click was outside the element
        if (targetElement && !this.elementRef.nativeElement.contains(targetElement)) {
            this.clickElsewhere.emit(event);
        }
    }
}
ClickElsewhereDirective.decorators = [
    { type: Directive, args: [{ selector: '[clickElsewhere]' },] }
];
/** @nocollapse */
ClickElsewhereDirective.ctorParameters = () => [
    { type: ElementRef }
];
ClickElsewhereDirective.propDecorators = {
    clickElsewhere: [{ type: Output }],
    onDocumentClick: [{ type: HostListener, args: ['document:click', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    ClickElsewhereDirective.prototype.clickElsewhere;
    /**
     * @type {?}
     * @private
     */
    ClickElsewhereDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpY2stZWxzZXdoZXJlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21kZHMtYW5ndWxhci1hdXRoLyIsInNvdXJjZXMiOlsiYXV0aC9hdXRoLWljb24vY2xpY2stZWxzZXdoZXJlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHMUYsTUFBTSxPQUFPLHVCQUF1Qjs7OztJQUdsQyxZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBRmhDLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQWMsQ0FBQztJQUViLENBQUM7Ozs7O0lBR3ZDLGVBQWUsQ0FBQyxLQUFpQjs7Y0FDaEMsYUFBYSxHQUFHLG1CQUFBLEtBQUssQ0FBQyxNQUFNLEVBQWU7UUFFL0MsNkNBQTZDO1FBQzdDLElBQUksYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBRTFFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQzs7O1lBZkYsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFOzs7O1lBRlQsVUFBVTs7OzZCQUl6QyxNQUFNOzhCQUlOLFlBQVksU0FBQyxnQkFBZ0IsRUFBRSxDQUFDLFFBQVEsQ0FBQzs7OztJQUoxQyxpREFBMEQ7Ozs7O0lBRTlDLDZDQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmLCBIb3N0TGlzdGVuZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuIFxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2NsaWNrRWxzZXdoZXJlXScgfSlcbmV4cG9ydCBjbGFzcyBDbGlja0Vsc2V3aGVyZURpcmVjdGl2ZSB7XG4gIEBPdXRwdXQoKSBjbGlja0Vsc2V3aGVyZSA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTsgXG4gXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cbiBcbiAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6Y2xpY2snLCBbJyRldmVudCddKVxuICBwdWJsaWMgb25Eb2N1bWVudENsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiBcbiAgICAgIC8vIENoZWNrIGlmIHRoZSBjbGljayB3YXMgb3V0c2lkZSB0aGUgZWxlbWVudFxuICAgICAgaWYgKHRhcmdldEVsZW1lbnQgJiYgIXRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNvbnRhaW5zKHRhcmdldEVsZW1lbnQpKSB7XG4gXG4gICAgICAgICB0aGlzLmNsaWNrRWxzZXdoZXJlLmVtaXQoZXZlbnQpO1xuICAgICAgfVxuICB9XG59Il19