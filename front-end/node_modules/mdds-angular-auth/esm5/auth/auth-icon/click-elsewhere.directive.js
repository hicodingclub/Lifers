/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, EventEmitter, ElementRef, HostListener, Output } from '@angular/core';
var ClickElsewhereDirective = /** @class */ (function () {
    function ClickElsewhereDirective(elementRef) {
        this.elementRef = elementRef;
        this.clickElsewhere = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    ClickElsewhereDirective.prototype.onDocumentClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var targetElement = (/** @type {?} */ (event.target));
        // Check if the click was outside the element
        if (targetElement && !this.elementRef.nativeElement.contains(targetElement)) {
            this.clickElsewhere.emit(event);
        }
    };
    ClickElsewhereDirective.decorators = [
        { type: Directive, args: [{ selector: '[clickElsewhere]' },] }
    ];
    /** @nocollapse */
    ClickElsewhereDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ClickElsewhereDirective.propDecorators = {
        clickElsewhere: [{ type: Output }],
        onDocumentClick: [{ type: HostListener, args: ['document:click', ['$event'],] }]
    };
    return ClickElsewhereDirective;
}());
export { ClickElsewhereDirective };
if (false) {
    /** @type {?} */
    ClickElsewhereDirective.prototype.clickElsewhere;
    /**
     * @type {?}
     * @private
     */
    ClickElsewhereDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpY2stZWxzZXdoZXJlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21kZHMtYW5ndWxhci1hdXRoLyIsInNvdXJjZXMiOlsiYXV0aC9hdXRoLWljb24vY2xpY2stZWxzZXdoZXJlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUY7SUFJRSxpQ0FBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUZoQyxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7SUFFYixDQUFDOzs7OztJQUd2QyxpREFBZTs7OztJQUR0QixVQUN1QixLQUFpQjs7WUFDaEMsYUFBYSxHQUFHLG1CQUFBLEtBQUssQ0FBQyxNQUFNLEVBQWU7UUFFL0MsNkNBQTZDO1FBQzdDLElBQUksYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBRTFFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQzs7Z0JBZkYsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFOzs7O2dCQUZULFVBQVU7OztpQ0FJekMsTUFBTTtrQ0FJTixZQUFZLFNBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxRQUFRLENBQUM7O0lBVTVDLDhCQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FmWSx1QkFBdUI7OztJQUNsQyxpREFBMEQ7Ozs7O0lBRTlDLDZDQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmLCBIb3N0TGlzdGVuZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuIFxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2NsaWNrRWxzZXdoZXJlXScgfSlcbmV4cG9ydCBjbGFzcyBDbGlja0Vsc2V3aGVyZURpcmVjdGl2ZSB7XG4gIEBPdXRwdXQoKSBjbGlja0Vsc2V3aGVyZSA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTsgXG4gXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cbiBcbiAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6Y2xpY2snLCBbJyRldmVudCddKVxuICBwdWJsaWMgb25Eb2N1bWVudENsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiBcbiAgICAgIC8vIENoZWNrIGlmIHRoZSBjbGljayB3YXMgb3V0c2lkZSB0aGUgZWxlbWVudFxuICAgICAgaWYgKHRhcmdldEVsZW1lbnQgJiYgIXRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNvbnRhaW5zKHRhcmdldEVsZW1lbnQpKSB7XG4gXG4gICAgICAgICB0aGlzLmNsaWNrRWxzZXdoZXJlLmVtaXQoZXZlbnQpO1xuICAgICAgfVxuICB9XG59Il19