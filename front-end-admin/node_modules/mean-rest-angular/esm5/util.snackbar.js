/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var snackBarCss = "\n.meanExpressAngularSnackBar {\n    visibility: hidden;\n    min-width: 250px;\n    margin-left: -125px;\n    background-color: #333;\n    color: #fff;\n    text-align: center; \n    border-radius: 2px; \n    padding: 16px; \n    position: fixed;\n    z-index: 1;\n    left: 50%;\n    bottom: 30px;\n}\n\n.meanExpressAngularSnackBar.show {\n    visibility: visible;\n\n    -webkit-animation: snackbarfadein 0.5s, snackbarfadeout 0.5s 2.5s;\n    animation: snackbarfadein 0.5s, snackbarfadeout 0.5s 2.5s;\n}\n\n@-webkit-keyframes snackbarfadein {\n    from {bottom: 0; opacity: 0;} \n    to {bottom: 30px; opacity: 1;}\n}\n\n@keyframes snackbarfadein {\n    from {bottom: 0; opacity: 0;}\n    to {bottom: 30px; opacity: 1;}\n}\n\n@-webkit-keyframes snackbarfadeout {\n    from {bottom: 30px; opacity: 1;} \n    to {bottom: 0; opacity: 0;}\n}\n\n@keyframes snackbarfadeout {\n    from {bottom: 30px; opacity: 1;}\n    to {bottom: 0; opacity: 0;}\n}\n";
var SnackBarConfig = /** @class */ (function () {
    function SnackBarConfig() {
    }
    return SnackBarConfig;
}());
export { SnackBarConfig };
if (false) {
    /** @type {?} */
    SnackBarConfig.prototype.content;
}
var SnackBar = /** @class */ (function () {
    function SnackBar(config) {
        this.config = config;
    }
    /**
     * @private
     * @return {?}
     */
    SnackBar.prototype.getHtml = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var id = 'meanExpressAngularSnackBar' + Date.now();
        /** @type {?} */
        var snackBarHtml = "\n<div class=\"meanExpressAngularSnackBar\" id=\"" + id + "\">\n\n</div>\n";
        return { id: id, html: snackBarHtml };
    };
    /**
     * @return {?}
     */
    SnackBar.prototype.show = /**
     * @return {?}
     */
    function () {
        if (!$('#meanExpressAngularSnackBarCss').length) {
            $("<style type='text/css' id='meanExpressAngularSnackBarCss'>" + snackBarCss + "</style>").appendTo("head");
        }
        /** @type {?} */
        var html = this.getHtml();
        /** @type {?} */
        var selector = '#' + html.id;
        $('body').append(html.html);
        $(selector).append(this.config.content);
        $(selector).addClass("show");
        setTimeout(function () {
            $(selector).removeClass("show");
            setTimeout(function () { $(selector).remove(); }, 500);
        }, 3000);
    };
    return SnackBar;
}());
export { SnackBar };
if (false) {
    /**
     * @type {?}
     * @private
     */
    SnackBar.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5zbmFja2Jhci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21lYW4tcmVzdC1hbmd1bGFyLyIsInNvdXJjZXMiOlsidXRpbC5zbmFja2Jhci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztJQUFJLFdBQVcsR0FBRyx1N0JBMENqQjtBQUdEO0lBQUE7SUFFQSxDQUFDO0lBQUQscUJBQUM7QUFBRCxDQUFDLEFBRkQsSUFFQzs7OztJQURHLGlDQUFnQjs7QUFHcEI7SUFFSSxrQkFBb0IsTUFBc0I7UUFBdEIsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7SUFBSSxDQUFDOzs7OztJQUN2QywwQkFBTzs7OztJQUFmOztZQUNRLEVBQUUsR0FBRyw0QkFBNEIsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFOztZQUM5QyxZQUFZLEdBQUcsbURBQ2tCLEdBQUcsRUFBRSxHQUFHLGlCQUdwRDtRQUNPLE9BQU8sRUFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUMsQ0FBQztJQUN4QyxDQUFDOzs7O0lBRU0sdUJBQUk7OztJQUFYO1FBQ0ksSUFBSSxDQUFDLENBQUMsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLE1BQU0sRUFBRTtZQUM3QyxDQUFDLENBQUMsNERBQTRELEdBQUcsV0FBVyxHQUFHLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvRzs7WUFFRyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTs7WUFDckIsUUFBUSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRTtRQUM1QixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFeEMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU3QixVQUFVLENBQUM7WUFDUCxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2hDLFVBQVUsQ0FBQyxjQUFXLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFBLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUN0RCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDZCxDQUFDO0lBRUwsZUFBQztBQUFELENBQUMsQUEvQkQsSUErQkM7Ozs7Ozs7SUE3QmUsMEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNuYWNrQmFyQ3NzID0gYFxuLm1lYW5FeHByZXNzQW5ndWxhclNuYWNrQmFyIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgbWluLXdpZHRoOiAyNTBweDtcbiAgICBtYXJnaW4tbGVmdDogLTEyNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbiAgICBib3JkZXItcmFkaXVzOiAycHg7IFxuICAgIHBhZGRpbmc6IDE2cHg7IFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBib3R0b206IDMwcHg7XG59XG5cbi5tZWFuRXhwcmVzc0FuZ3VsYXJTbmFja0Jhci5zaG93IHtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXG4gICAgLXdlYmtpdC1hbmltYXRpb246IHNuYWNrYmFyZmFkZWluIDAuNXMsIHNuYWNrYmFyZmFkZW91dCAwLjVzIDIuNXM7XG4gICAgYW5pbWF0aW9uOiBzbmFja2JhcmZhZGVpbiAwLjVzLCBzbmFja2JhcmZhZGVvdXQgMC41cyAyLjVzO1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc25hY2tiYXJmYWRlaW4ge1xuICAgIGZyb20ge2JvdHRvbTogMDsgb3BhY2l0eTogMDt9IFxuICAgIHRvIHtib3R0b206IDMwcHg7IG9wYWNpdHk6IDE7fVxufVxuXG5Aa2V5ZnJhbWVzIHNuYWNrYmFyZmFkZWluIHtcbiAgICBmcm9tIHtib3R0b206IDA7IG9wYWNpdHk6IDA7fVxuICAgIHRvIHtib3R0b206IDMwcHg7IG9wYWNpdHk6IDE7fVxufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc25hY2tiYXJmYWRlb3V0IHtcbiAgICBmcm9tIHtib3R0b206IDMwcHg7IG9wYWNpdHk6IDE7fSBcbiAgICB0byB7Ym90dG9tOiAwOyBvcGFjaXR5OiAwO31cbn1cblxuQGtleWZyYW1lcyBzbmFja2JhcmZhZGVvdXQge1xuICAgIGZyb20ge2JvdHRvbTogMzBweDsgb3BhY2l0eTogMTt9XG4gICAgdG8ge2JvdHRvbTogMDsgb3BhY2l0eTogMDt9XG59XG5gO1xuZGVjbGFyZSB2YXIgJDogYW55O1xuXG5leHBvcnQgY2xhc3MgU25hY2tCYXJDb25maWcge1xuICAgIGNvbnRlbnQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIFNuYWNrQmFyIHtcbiAgICBcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbmZpZzogU25hY2tCYXJDb25maWcgKSB7fVxuICAgIHByaXZhdGUgZ2V0SHRtbCgpIHtcbiAgICAgICAgdmFyIGlkID0gJ21lYW5FeHByZXNzQW5ndWxhclNuYWNrQmFyJyArIERhdGUubm93KCk7XG4gICAgICAgIHZhciBzbmFja0Jhckh0bWwgPSBgXG48ZGl2IGNsYXNzPVwibWVhbkV4cHJlc3NBbmd1bGFyU25hY2tCYXJcIiBpZD1cImAgKyBpZCArIGBcIj5cblxuPC9kaXY+XG5gO1xuICAgICAgICByZXR1cm4ge2lkOiBpZCwgaHRtbDogc25hY2tCYXJIdG1sfTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvdygpIHtcbiAgICAgICAgaWYgKCEkKCcjbWVhbkV4cHJlc3NBbmd1bGFyU25hY2tCYXJDc3MnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICQoXCI8c3R5bGUgdHlwZT0ndGV4dC9jc3MnIGlkPSdtZWFuRXhwcmVzc0FuZ3VsYXJTbmFja0JhckNzcyc+XCIgKyBzbmFja0JhckNzcyArIFwiPC9zdHlsZT5cIikuYXBwZW5kVG8oXCJoZWFkXCIpOyBcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdmFyIGh0bWwgPSB0aGlzLmdldEh0bWwoKTtcbiAgICAgICAgdmFyIHNlbGVjdG9yID0gJyMnICsgaHRtbC5pZDtcbiAgICAgICAgJCgnYm9keScpLmFwcGVuZChodG1sLmh0bWwpO1xuICAgICAgICAkKHNlbGVjdG9yKS5hcHBlbmQodGhpcy5jb25maWcuY29udGVudCk7XG5cbiAgICAgICAgJChzZWxlY3RvcikuYWRkQ2xhc3MoXCJzaG93XCIpO1xuICAgICAgICBcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyBcbiAgICAgICAgICAgICQoc2VsZWN0b3IpLnJlbW92ZUNsYXNzKFwic2hvd1wiKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXskKHNlbGVjdG9yKS5yZW1vdmUoKTt9LCA1MDApO1xuICAgICAgICAgfSwgMzAwMCk7XG4gICAgfVxuXG59XG4iXX0=