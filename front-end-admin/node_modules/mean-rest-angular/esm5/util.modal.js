/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var modalHtml = "\n<div class=\"meanExpressAngularModal\" id=\"meanExpressAngularModal\">\n  <div class=\"meanExpressAngularModal-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"meanExpressAngularModalTitle\">Modal title from function</h5>\n        <button type=\"button\" class=\"close\" id=\"meanExpressAngularModalClose\" aria-label=\"Close\" >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" id=\"meanExpressAngularModalBody\">\n        Hello\n      </div>\n      <div class=\"modal-footer\" id=\"meanExpressAngularModalFooter\">\n      </div>\n    </div>\n  </div>\n</div> \n";
/** @type {?} */
var modalCss = "\n.meanExpressAngularModal {\n    display: none; \n    position: fixed; \n    z-index: 100; \n    padding-top: 100px; \n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto; \n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0,0.4);\n}\n\n.meanExpressAngularModal.show {\n    display: block; \n}\n\n.meanExpressAngularModal-content {\n    position: relative;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    border: 1px solid #888;\n    width: 50%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: modalanimatetop;\n    -webkit-animation-duration: 0.4s;\n    animation-name: modalanimatetop;\n    animation-duration: 0.4s\n}\n\n@-webkit-keyframes modalanimatetop {\n    from {top:-300px; opacity:0} \n    to {top:0; opacity:1}\n}\n\n@keyframes modalanimatetop {\n    from {top:-300px; opacity:0}\n    to {top:0; opacity:1}\n}\n";
var ModalConfig = /** @class */ (function () {
    function ModalConfig() {
    }
    return ModalConfig;
}());
export { ModalConfig };
if (false) {
    /** @type {?} */
    ModalConfig.prototype.title;
    /** @type {?} */
    ModalConfig.prototype.content;
    /** @type {?} */
    ModalConfig.prototype.buttons;
    /** @type {?} */
    ModalConfig.prototype.returns;
    /** @type {?} */
    ModalConfig.prototype.callBack;
}
var Modal = /** @class */ (function () {
    function Modal(config) {
        this.config = config;
    }
    /**
     * @return {?}
     */
    Modal.prototype.show = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var config = this.config;
        if (!$('#meanExpressAngularModal').length) {
            $("<style type='text/css' id='meanExpressAngularModalCss'>" + modalCss + "</style>").appendTo("head");
            $('body').append(modalHtml);
        }
        $("#meanExpressAngularModalFooter").empty();
        for (var i = 0; i < config.buttons.length; i++) {
            /** @type {?} */
            var text = config.buttons[i];
            /** @type {?} */
            var button = '<button type="button" class="btn btn-primary" id="meanExpressAngularModalBtn' + i + '" >' + text + '</button>';
            $("#meanExpressAngularModalFooter").append(button);
            $("#meanExpressAngularModalBtn" + i).click(function (event) {
                $('#meanExpressAngularModal').removeClass("show");
                /** @type {?} */
                var index = parseInt(event.target.id.replace("meanExpressAngularModalBtn", ""));
                config.callBack(config.returns[index]);
            });
        }
        $("#meanExpressAngularModalTitle").empty();
        $("#meanExpressAngularModalTitle").append(config.title);
        $("#meanExpressAngularModalBody").empty();
        $("#meanExpressAngularModalBody").append(config.content);
        $("#meanExpressAngularModalClose").click(function () {
            $('#meanExpressAngularModal').removeClass("show");
            config.callBack(false);
        });
        $('#meanExpressAngularModal').addClass("show");
    };
    /**
     * @return {?}
     */
    Modal.prototype.hide = /**
     * @return {?}
     */
    function () {
        $('#meanExpressAngularModal').removeClass("show");
    };
    return Modal;
}());
export { Modal };
if (false) {
    /**
     * @type {?}
     * @private
     */
    Modal.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5tb2RhbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21lYW4tcmVzdC1hbmd1bGFyLyIsInNvdXJjZXMiOlsidXRpbC5tb2RhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztJQUFJLFNBQVMsR0FBRyxzc0JBa0JmOztJQUVHLFFBQVEsR0FBRyw2N0JBMENkO0FBSUQ7SUFBQTtJQVFBLENBQUM7SUFBRCxrQkFBQztBQUFELENBQUMsQUFSRCxJQVFDOzs7O0lBUEcsNEJBQWM7O0lBQ2QsOEJBQWdCOztJQUVoQiw4QkFBa0I7O0lBRWxCLDhCQUFtQjs7SUFDbkIsK0JBQTJCOztBQUcvQjtJQUNJLGVBQW9CLE1BQW1CO1FBQW5CLFdBQU0sR0FBTixNQUFNLENBQWE7SUFBSSxDQUFDOzs7O0lBRXJDLG9CQUFJOzs7SUFBWDs7WUFDUSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU07UUFDeEIsSUFBSSxDQUFDLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLE1BQU0sRUFBRTtZQUN2QyxDQUFDLENBQUMseURBQXlELEdBQUcsUUFBUSxHQUFHLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQy9CO1FBRUQsQ0FBQyxDQUFFLGdDQUFnQyxDQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDOUMsS0FBSyxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFOztnQkFDckMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDOztnQkFDeEIsTUFBTSxHQUFHLDhFQUE4RSxHQUFHLENBQUMsR0FBRyxLQUFLLEdBQUcsSUFBSSxHQUFHLFdBQVc7WUFDNUgsQ0FBQyxDQUFFLGdDQUFnQyxDQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRXJELENBQUMsQ0FBRSw2QkFBNkIsR0FBQyxDQUFDLENBQUUsQ0FBQyxLQUFLLENBQUMsVUFBUyxLQUFLO2dCQUNyRCxDQUFDLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7O29CQUM5QyxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyw0QkFBNEIsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDL0UsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDM0MsQ0FBQyxDQUFDLENBQUM7U0FDTjtRQUVELENBQUMsQ0FBRSwrQkFBK0IsQ0FBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzdDLENBQUMsQ0FBRSwrQkFBK0IsQ0FBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUQsQ0FBQyxDQUFFLDhCQUE4QixDQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDNUMsQ0FBQyxDQUFFLDhCQUE4QixDQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUUzRCxDQUFDLENBQUUsK0JBQStCLENBQUUsQ0FBQyxLQUFLLENBQUM7WUFDdkMsQ0FBQyxDQUFDLDBCQUEwQixDQUFDLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2xELE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0IsQ0FBQyxDQUFDLENBQUM7UUFFSCxDQUFDLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7OztJQUVNLG9CQUFJOzs7SUFBWDtRQUNJLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBQ0wsWUFBQztBQUFELENBQUMsQUF2Q0QsSUF1Q0M7Ozs7Ozs7SUF0Q2UsdUJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vZGFsSHRtbCA9IGBcbjxkaXYgY2xhc3M9XCJtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbFwiIGlkPVwibWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxcIj5cbiAgPGRpdiBjbGFzcz1cIm1lYW5FeHByZXNzQW5ndWxhck1vZGFsLWNvbnRlbnRcIj5cbiAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWhlYWRlclwiPlxuICAgICAgICA8aDUgY2xhc3M9XCJtb2RhbC10aXRsZVwiIGlkPVwibWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxUaXRsZVwiPk1vZGFsIHRpdGxlIGZyb20gZnVuY3Rpb248L2g1PlxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgaWQ9XCJtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbENsb3NlXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCIgPlxuICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPiZ0aW1lczs8L3NwYW4+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiIGlkPVwibWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxCb2R5XCI+XG4gICAgICAgIEhlbGxvXG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIiBpZD1cIm1lYW5FeHByZXNzQW5ndWxhck1vZGFsRm9vdGVyXCI+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj4gXG5gO1xuXG52YXIgbW9kYWxDc3MgPSBgXG4ubWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwge1xuICAgIGRpc3BsYXk6IG5vbmU7IFxuICAgIHBvc2l0aW9uOiBmaXhlZDsgXG4gICAgei1pbmRleDogMTAwOyBcbiAgICBwYWRkaW5nLXRvcDogMTAwcHg7IFxuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTsgXG4gICAgb3ZlcmZsb3c6IGF1dG87IFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigwLDAsMCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjQpO1xufVxuXG4ubWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwuc2hvdyB7XG4gICAgZGlzcGxheTogYmxvY2s7IFxufVxuXG4ubWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwtY29udGVudCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcbiAgICB3aWR0aDogNTAlO1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwwLDAsMC4yKSwwIDZweCAyMHB4IDAgcmdiYSgwLDAsMCwwLjE5KTtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBtb2RhbGFuaW1hdGV0b3A7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246IDAuNHM7XG4gICAgYW5pbWF0aW9uLW5hbWU6IG1vZGFsYW5pbWF0ZXRvcDtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNHNcbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIG1vZGFsYW5pbWF0ZXRvcCB7XG4gICAgZnJvbSB7dG9wOi0zMDBweDsgb3BhY2l0eTowfSBcbiAgICB0byB7dG9wOjA7IG9wYWNpdHk6MX1cbn1cblxuQGtleWZyYW1lcyBtb2RhbGFuaW1hdGV0b3Age1xuICAgIGZyb20ge3RvcDotMzAwcHg7IG9wYWNpdHk6MH1cbiAgICB0byB7dG9wOjA7IG9wYWNpdHk6MX1cbn1cbmA7XG5cbmRlY2xhcmUgdmFyICQ6IGFueTtcblxuZXhwb3J0IGNsYXNzIE1vZGFsQ29uZmlnIHtcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIGNvbnRlbnQ6IHN0cmluZztcbiAgICAvL2xpc3Qgb2YgYnV0dG9uIHRleHRcbiAgICBidXR0b25zOiBzdHJpbmdbXTtcbiAgICAvL2xpc3Qgb2YgYnV0dG9uIHJldHVybnMgd2hlbiBjbGlja2VkXG4gICAgcmV0dXJuczogYm9vbGVhbltdO1xuICAgIGNhbGxCYWNrOiAocmVzdWx0KSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgTW9kYWwge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgY29uZmlnOiBNb2RhbENvbmZpZyApIHt9XG5cbiAgICBwdWJsaWMgc2hvdygpIHtcbiAgICAgICAgdmFyIGNvbmZpZyA9IHRoaXMuY29uZmlnO1xuICAgICAgICBpZiAoISQoJyNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbCcpLmxlbmd0aCkge1xuICAgICAgICAgICAgJChcIjxzdHlsZSB0eXBlPSd0ZXh0L2NzcycgaWQ9J21lYW5FeHByZXNzQW5ndWxhck1vZGFsQ3NzJz5cIiArIG1vZGFsQ3NzICsgXCI8L3N0eWxlPlwiKS5hcHBlbmRUbyhcImhlYWRcIik7IFxuICAgICAgICAgICAgJCgnYm9keScpLmFwcGVuZChtb2RhbEh0bWwpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAkKCBcIiNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbEZvb3RlclwiICkuZW1wdHkoKTtcbiAgICAgICAgZm9yICh2YXIgaT0wOyBpPCBjb25maWcuYnV0dG9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHRleHQgPSBjb25maWcuYnV0dG9uc1tpXTtcbiAgICAgICAgICAgIHZhciBidXR0b24gPSAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiBpZD1cIm1lYW5FeHByZXNzQW5ndWxhck1vZGFsQnRuJyArIGkgKyAnXCIgPicgKyB0ZXh0ICsgJzwvYnV0dG9uPic7XG4gICAgICAgICAgICAkKCBcIiNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbEZvb3RlclwiICkuYXBwZW5kKGJ1dHRvbik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICQoIFwiI21lYW5FeHByZXNzQW5ndWxhck1vZGFsQnRuXCIraSApLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgJCgnI21lYW5FeHByZXNzQW5ndWxhck1vZGFsJykucmVtb3ZlQ2xhc3MoXCJzaG93XCIpO1xuICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHBhcnNlSW50KGV2ZW50LnRhcmdldC5pZC5yZXBsYWNlKFwibWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxCdG5cIiwgXCJcIikpO1xuICAgICAgICAgICAgICAgIGNvbmZpZy5jYWxsQmFjayhjb25maWcucmV0dXJuc1tpbmRleF0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAkKCBcIiNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbFRpdGxlXCIgKS5lbXB0eSgpO1xuICAgICAgICAkKCBcIiNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbFRpdGxlXCIgKS5hcHBlbmQoY29uZmlnLnRpdGxlKTtcbiAgICAgICAgJCggXCIjbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxCb2R5XCIgKS5lbXB0eSgpO1xuICAgICAgICAkKCBcIiNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbEJvZHlcIiApLmFwcGVuZChjb25maWcuY29udGVudCk7XG5cbiAgICAgICAgJCggXCIjbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxDbG9zZVwiICkuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCcjbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwnKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XG4gICAgICAgICAgICBjb25maWcuY2FsbEJhY2soZmFsc2UpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKCcjbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwnKS5hZGRDbGFzcyhcInNob3dcIik7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBoaWRlKCkge1xuICAgICAgICAkKCcjbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwnKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XG4gICAgfVxufVxuIl19