{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://mean-rest-angular/util.modal.ts","ng://mean-rest-angular/util.snackbar.ts","ng://mean-rest-angular/util.errortoast.ts","ng://mean-rest-angular/base.service.ts","ng://mean-rest-angular/common.service.ts","ng://mean-rest-angular/util.tools.ts","ng://mean-rest-angular/base.component.ts","ng://mean-rest-angular/common.directives.ts","ng://mean-rest-angular/summernote.directive.ts","ng://mean-rest-angular/mra.module.ts","ng://mean-rest-angular/route-reuse-strategy.ts","ng://mean-rest-angular/ngb-date-formatter.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","ModalConfig","Modal","config","this","prototype","show","$","appendTo","append","empty","buttons","button","click","event","removeClass","index","parseInt","target","id","replace","callBack","returns","title","content","addClass","hide","SnackBarConfig","SnackBar","getHtml","Date","now","html","selector","setTimeout","remove","ErrorToastConfig","ErrorToast","contentSelector","moreSelector","linkSelector","buttonSelector","more","preventDefault","ServiceError","BaseService","http","serviceUrl","storage","getFromStorage","name","putToStorage","errorResponseHandler","err","ErrorEvent","status","clientErrorMsg","message","serverError","throwError","formatDetail","detail","formatList","list","getList","page","per_page","searchContext","httpOptions","params","HttpParams","set","toString","headers","HttpHeaders","Accept","post","pipe","catchError","get","map","getListWithCondition","getDetailForAction","action","getDetail","deleteOne","delete","deleteManyByIds","ids","Content-Type","createOne","item","put","updateOne","MraCommonService","Injectable","Util","clone","obj","copy","setTime","getTime","Array","len","Object","attr","hasOwnProperty","Error","LIST","DETAIL","EDIT","BaseComponent","service","injector","router","route","location","view","itemCamelName","objectKeys","keys","majorUi","eventEmitter","EventEmitter","total_count","total_pages","pages","left_more","right_more","checkAll","checkedItem","_detail","_extra","subEdit","enums","stringFields","referenceFields","referenceFieldsMap","dateFields","indexFields","multiSelectionFields","arrayFields","mapFields","dateFormat","timeFormat","hiddenFields","refreshing","clickedId","selectedId","moreSearchOpened","textEditorMap","isAdding","ItemCamelName","charAt","toUpperCase","substr","itemName","toLowerCase","parentItem","getParentRouteItem","commonService","onServiceError","errMsg","JSON","stringify","console","info","substring","populatePages","min","max","SHOW_PAGE","getKey","key","url","split","routeToPage","populateList","onNextPage","onPreviousPage","onGotoPage","p","goBack","back","str","_b","tslib_1.__values","_c","fnm","prop","formatReferenceField","field","fieldName","refDetail","_id","referIndex","k","formatReference","deFormatReference","clearFieldReference","undefined","isDefinedFieldReference","formatDateField","d","M","yyyy","h","s","dd","MM","hh","mm","ss","fmt","t_fmt","dt","getDate","getMonth","yy","getFullYear","slice","getHours","getMinutes","getSeconds","date","day","month","year","from","to","pop","time","hour","minute","second","t_value","t_from","t_to","t_pop","formatDate","deFormatDateField","toISOString","deFormatDate","dateStr","clearFieldDate","isDefinedFieldDate","formatArrayMultiSelectionField","selectObj","enums_1","enums_1_1","isArray","field_1","field_1_1","join","selection","formatArrayMultiSelection","deFormatArrayMultiSelection","_d","selectArray","_e","_f","clearFieldArrayMultiSelection","isDefinedFieldArrayMultiSelection","some","multiselectionSelected","formatMapField","elementType","values","filter","x","formatMapFields","f","deFormatMapFields","selectMap","clearFieldMap","isDefinedFieldMap","mapSelected","formatArrayField","field_2","field_2_1","ref","formatArrayFields","deFormatArrayFields","clearFieldArray","isDefinedFieldArray","arraySelected","deFormatDetail","cpy","populateDetail","populateDetailForAction","_this","subscribe","originalDetail","extraFieldsUnload","extraInfoPopulate","emit","populateDetailFromCopy","copy_id","fieldDef","mapKeyType","keyArray","keyRefName","recordKey_1","refService","this_1","id_1","mapField_1","keyArray_1","keyArray_1_1","equalTwoSearchContextArrays","arr1","arr2","compareObj","a","b","a_s","b_s","sort","processSearchContext","searchText","orSearchContext","andSearchContext","searchMoreDetail","d2","this_2","indexOf","valueToShow","includes","$in","_g","$and","$or","context","cachedOr","cachedAnd","_h","_j","sub","searchList","navigate","relativeTo","loadUIFromCache","new_page","url_page","snapshot","paramMap","cached_page","result","items","apply","Boolean","valueOf","onRefresh","ViewType","onCheckAllChange","isItemSelected","onDeleteSelected","deletedItem","forEach","snackBarConfig","idx","splice","onDelete","modalConfig","onSubmit","extraFieldsLoad","editCancel","onDisplayRefClicked","fn","getRefFromField","getParentActivatedRouter","stopPropagation","onDetailLinkClicked","clearValueFromDetail","clearValueFromArrayField","clearValueFromMapField","clearValueFromMapKey","checkValueDefinedFromDetail","clearValueFromDetailAndSearchList","onAddArrayItem","onAddMapItem","onRefSelect","refSelectDirective","viewContainerRef","clear","selectComponents","componentRef","insert","hostView","comType","warn","componentFactory","componentFactoryResolver","resolveComponentFactory","createComponent","componentInstance","inputData","setFocus","componentSubscription","val","unsubscribe","detach","outputData","onRefShow","detailType","focusEl","nativeElement","focus","uiCloseModal","uiOnEscapeKey","selectItemSelected","num","detailSelSelected","selectViewDetail","detailSelBack","toggleMoreSearch","onSearchTextClear","onSearchClear","textEditors","editor","validatorObj","setContent","array","toArray","array_1","array_1_1","getContent","text","fieldState","errors","minlength","valid","maxlength","validateValue","required","onEdtiorPreview","editorName","preview","routeSnapshot","data","mraLevel","parent","getParentRouteItemId","parentItemId","getParentRouteRefField","mp","root","toggleCheckedItem","onAdd","toggleAdd","onAddDone","onDateSelectionToggle","onDateSelection","after","isHovered","hoveredDate","before","isInside","isRange","equals","MinNumber","validate","control","minnum","parseFloat","minnumber","isNaN","Directive","args","providers","provide","NG_VALIDATORS","useExisting","multi","Input","MaxNumber","maxnum","maxnumber","summerNoteConfig","minHeight","airMode","dialogsInBody","dialogsFade","disableDragAndDrop","toolbar","MraRichTextSelectDirective","el","render","setProperty","summernote","each","_a","ElementRef","Renderer2","MraRichTextShowDirective","displayHtml","MraModule","NgModule","imports","declarations","exports","MraRouteReuseStrategy","detachedRouteHandles","pageYOffset","editItems","isAuth","isAuthorized","authRecord","parse","localStorage","getItem","accessToken","getLogoutTime","logoutTs","isLogoutReload","checkAuthentication","auth","shouldDetach","routeConfig","path","window","store","handle","shouldAttach","retrieve","yOffset","log","scrollTo","shouldReuseRoute","future","curr","regexes_1","re","regexes_1_1","reg","search","v","NaN"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","var modalHtml = `\n<div class=\"meanExpressAngularModal\" id=\"meanExpressAngularModal\">\n  <div class=\"meanExpressAngularModal-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"meanExpressAngularModalTitle\">Modal title from function</h5>\n        <button type=\"button\" class=\"close\" id=\"meanExpressAngularModalClose\" aria-label=\"Close\" >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" id=\"meanExpressAngularModalBody\">\n        Hello\n      </div>\n      <div class=\"modal-footer\" id=\"meanExpressAngularModalFooter\">\n      </div>\n    </div>\n  </div>\n</div> \n`;\n\nvar modalCss = `\n.meanExpressAngularModal {\n    display: none; \n    position: fixed; \n    z-index: 100; \n    padding-top: 100px; \n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto; \n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0,0.4);\n}\n\n.meanExpressAngularModal.show {\n    display: block; \n}\n\n.meanExpressAngularModal-content {\n    position: relative;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    border: 1px solid #888;\n    width: 50%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: modalanimatetop;\n    -webkit-animation-duration: 0.4s;\n    animation-name: modalanimatetop;\n    animation-duration: 0.4s\n}\n\n@-webkit-keyframes modalanimatetop {\n    from {top:-300px; opacity:0} \n    to {top:0; opacity:1}\n}\n\n@keyframes modalanimatetop {\n    from {top:-300px; opacity:0}\n    to {top:0; opacity:1}\n}\n`;\n\ndeclare var $: any;\n\nexport class ModalConfig {\n    title: string;\n    content: string;\n    //list of button text\n    buttons: string[];\n    //list of button returns when clicked\n    returns: boolean[];\n    callBack: (result) => void;\n}\n\nexport class Modal {\n    constructor(private config: ModalConfig ) {}\n\n    public show() {\n        var config = this.config;\n        if (!$('#meanExpressAngularModal').length) {\n            $(\"<style type='text/css' id='meanExpressAngularModalCss'>\" + modalCss + \"</style>\").appendTo(\"head\"); \n            $('body').append(modalHtml);\n        }\n        \n        $( \"#meanExpressAngularModalFooter\" ).empty();\n        for (var i=0; i< config.buttons.length; i++) {\n            var text = config.buttons[i];\n            var button = '<button type=\"button\" class=\"btn btn-primary\" id=\"meanExpressAngularModalBtn' + i + '\" >' + text + '</button>';\n            $( \"#meanExpressAngularModalFooter\" ).append(button);\n            \n            $( \"#meanExpressAngularModalBtn\"+i ).click(function(event) {\n                $('#meanExpressAngularModal').removeClass(\"show\");\n                var index = parseInt(event.target.id.replace(\"meanExpressAngularModalBtn\", \"\"));\n                config.callBack(config.returns[index]);\n            });\n        }\n\n        $( \"#meanExpressAngularModalTitle\" ).empty();\n        $( \"#meanExpressAngularModalTitle\" ).append(config.title);\n        $( \"#meanExpressAngularModalBody\" ).empty();\n        $( \"#meanExpressAngularModalBody\" ).append(config.content);\n\n        $( \"#meanExpressAngularModalClose\" ).click(function() {\n            $('#meanExpressAngularModal').removeClass(\"show\");\n            config.callBack(false);\n        });\n\n        $('#meanExpressAngularModal').addClass(\"show\");\n    }\n    \n    public hide() {\n        $('#meanExpressAngularModal').removeClass(\"show\");\n    }\n}\n","var snackBarCss = `\n.meanExpressAngularSnackBar {\n    visibility: hidden;\n    min-width: 250px;\n    margin-left: -125px;\n    background-color: #333;\n    color: #fff;\n    text-align: center; \n    border-radius: 2px; \n    padding: 16px; \n    position: fixed;\n    z-index: 1;\n    left: 50%;\n    bottom: 30px;\n}\n\n.meanExpressAngularSnackBar.show {\n    visibility: visible;\n\n    -webkit-animation: snackbarfadein 0.5s, snackbarfadeout 0.5s 2.5s;\n    animation: snackbarfadein 0.5s, snackbarfadeout 0.5s 2.5s;\n}\n\n@-webkit-keyframes snackbarfadein {\n    from {bottom: 0; opacity: 0;} \n    to {bottom: 30px; opacity: 1;}\n}\n\n@keyframes snackbarfadein {\n    from {bottom: 0; opacity: 0;}\n    to {bottom: 30px; opacity: 1;}\n}\n\n@-webkit-keyframes snackbarfadeout {\n    from {bottom: 30px; opacity: 1;} \n    to {bottom: 0; opacity: 0;}\n}\n\n@keyframes snackbarfadeout {\n    from {bottom: 30px; opacity: 1;}\n    to {bottom: 0; opacity: 0;}\n}\n`;\ndeclare var $: any;\n\nexport class SnackBarConfig {\n    content: string;\n}\n\nexport class SnackBar {\n    \n    constructor(private config: SnackBarConfig ) {}\n    private getHtml() {\n        var id = 'meanExpressAngularSnackBar' + Date.now();\n        var snackBarHtml = `\n<div class=\"meanExpressAngularSnackBar\" id=\"` + id + `\">\n\n</div>\n`;\n        return {id: id, html: snackBarHtml};\n    }\n\n    public show() {\n        if (!$('#meanExpressAngularSnackBarCss').length) {\n            $(\"<style type='text/css' id='meanExpressAngularSnackBarCss'>\" + snackBarCss + \"</style>\").appendTo(\"head\"); \n        }\n        \n        var html = this.getHtml();\n        var selector = '#' + html.id;\n        $('body').append(html.html);\n        $(selector).append(this.config.content);\n\n        $(selector).addClass(\"show\");\n        \n        setTimeout(function(){ \n            $(selector).removeClass(\"show\");\n            setTimeout(function(){$(selector).remove();}, 500);\n         }, 3000);\n    }\n\n}\n","var errorCss = `\n.meanExpressAngularError {\n    visibility: hidden; \n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n    min-width: 250px; \n    max-width: 60%;\n    left: 50%;\n    top: 20%;\n    transform: translate(-50%, 0);\n    position: fixed; \n    z-index: 10; \n}\n.meanExpressAngularError.show {\n    visibility: visible; \n}\n\n.meanExpressAngularErrorMoreLink {\n    display: none;\n}\n.meanExpressAngularErrorMoreLink.show {\n    display: block;\n}\n.meanExpressAngularErrorMore {\n    display: none;\n    font-size: 0.75rem;\n    font-color: black;\n    background-color: gray;\n}\n.meanExpressAngularErrorMore.show {\n    display: block;\n}\n`;\n\ndeclare var $: any;\n\nexport class ErrorToastConfig {\n    content: string;\n    more: string;\n}\n\nexport class ErrorToast {\n    \n    constructor(private config: ErrorToastConfig ) {}\n    private getHtml() {\n        var id = 'meanExpressAngularError' + Date.now();\n        var errorHtml = `\n<div class=\"alert alert-danger fade in alert-dismissible meanExpressAngularError\"\n    id=\"`+id+`\">\n <button type=\"button\" class=\"close\" aria-label=\"Close\" id=\"button`+id+`\">\n    <span aria-hidden=\"true\" style=\"font-size:20px\">Ã</span>\n  </button>\n  <div>\n    <strong>Error!</strong>\n  </div>\n  <div id=\"content`+id+`\">\n  </div>\n  <a id=\"link`+id+`\" class=\"meanExpressAngularErrorMoreLink\" href=\".\" >Show more details...\n  </a>\n  <div id=\"more`+id+`\" class=\"meanExpressAngularErrorMore\">\n  </div>\n</div>\n`;\n        return {id: id, html: errorHtml};\n    }\n\n    public show() {\n        if (!$('#meanExpressAngularErrorCss').length) {\n            $(\"<style type='text/css' id='meanExpressAngularErrorCss'>\" + errorCss + \"</style>\").appendTo(\"head\"); \n        }\n        var html = this.getHtml();\n        var selector = '#' + html.id;\n        var contentSelector = '#content' + html.id;\n        var moreSelector = '#more' + html.id;\n        var linkSelector = '#link' + html.id;\n        var buttonSelector = '#button' + html.id;\n        $('body').append(html.html);\n        $(contentSelector).append(this.config.content);\n        if (this.config.more) {\n            $(moreSelector).append(this.config.more);\n            $(linkSelector).addClass(\"show\");\n            $(linkSelector).click(function(event) {\n                event.preventDefault();\n                $(moreSelector).addClass(\"show\");\n            });\n        }\n        $(buttonSelector).click(function(event) {$(selector).removeClass(\"show\");});\n        \n        $(selector).addClass(\"show\");\n    }\n\n}\n","import { Observable, throwError } from 'rxjs';\nimport { catchError, map, filter, retry } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders,HttpParams, HttpErrorResponse } from '@angular/common/http';\n\nexport class ServiceError {\n    status:number;\n    clientErrorMsg:string;\n    serverError:any;\n}\n\nexport class BaseService {\n    protected storage:any = {};\n\n    constructor(protected http: HttpClient, protected serviceUrl: string) {}\n    \n    public getFromStorage(name:string) {\n        return this.storage[name];\n    }\n    public putToStorage(name:string, value:any) {\n        this.storage[name] = value;\n    }\n    \n    protected errorResponseHandler(error: HttpErrorResponse) {\n      let err:ServiceError = new ServiceError();;\n      if (error.error instanceof ErrorEvent) {\n          // A client-side or network error occurred. Handle it accordingly.\n          err.status = 0;\n          err.clientErrorMsg = error.error.message\n      } else {\n          // The backend returned an unsuccessful response code.\n          // The response body may contain clues as to what went wrong,\n          err.status = error.status;\n          err.serverError = error.error;\n      }\n      // return an observable with a user-facing error message\n      return throwError(\n        err\n      );\n    }\n\n    protected formatDetail(detail:any): any {\n        return detail;\n    }\n    \n    protected formatList(list:any): any {\n        return list;\n    }\n\n    getList(page:number, per_page:number, searchContext:any) {\n        let httpOptions = {\n            params: new HttpParams().set('__page', page.toString())\n                                    .set('__per_page', per_page.toString()),\n            headers: new HttpHeaders({ 'Accept': 'application/json' }),\n        };\n        \n        if (!searchContext) {\n            return this.http.get<any>(this.serviceUrl, httpOptions)\n                .pipe(\n                    map(this.formatList),\n                    catchError(this.errorResponseHandler)\n                );\n        }\n        httpOptions.params = httpOptions.params.set('action', \"Search\");\n        return this.http.post<any>(this.serviceUrl+ \"mddsaction/get\", searchContext, httpOptions)\n            .pipe(\n                catchError(this.errorResponseHandler)\n            );\n    }\n\n    getListWithCondition(page:number, per_page:number) {\n        let httpOptions = {\n            params: new HttpParams().set('__page', page.toString())\n                                    .set('__per_page', per_page.toString()),\n            headers: new HttpHeaders({ 'Accept': 'application/json' }),\n        };\n\n        return this.http.get<any>(this.serviceUrl, httpOptions)\n            .pipe(\n                map(this.formatList),\n                catchError(this.errorResponseHandler)\n            );\n    }\n\n    getDetailForAction(id: string, action: string) {\n        let httpOptions = {\n          headers: new HttpHeaders({ 'Accept': 'application/json' }),\n        };\n        let serviceUrl = this.serviceUrl\n        if (action) {\n          httpOptions['params'] = new HttpParams().set('action', action);\n          if (action == \"edit\") action = \"post\"\n          serviceUrl = serviceUrl + \"mddsaction/\" + action + \"/\";\n        }\n        return this.http.get<any>(serviceUrl + id, httpOptions)\n            .pipe(\n                map(this.formatDetail),\n                catchError(this.errorResponseHandler)\n            );\n    }\n    getDetail(id: string) {\n        return this.getDetailForAction(id, null);\n    }\n    deleteOne(id:string) {\n        return this.http.delete<any>(this.serviceUrl + id)\n            .pipe(\n                catchError(this.errorResponseHandler)\n            );\n    }\n    deleteManyByIds(ids:string[]) {\n        let httpOptions = {\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n            params: new HttpParams().set('action', \"DeleteManyByIds\"),\n        };\n        return this.http.post<any>(this.serviceUrl + \"mddsaction/delete\", ids, httpOptions)\n            .pipe(\n                catchError(this.errorResponseHandler)\n            );\n    }\n    createOne(item:any) {\n        let httpOptions = {\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n        };\n        return this.http.put<any>(this.serviceUrl, item, httpOptions)\n            .pipe(\n                map(this.formatDetail),\n                catchError(this.errorResponseHandler)\n            );\n    }\n    updateOne(id:string, item:any) {\n        let httpOptions = {\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n        };\n        return this.http.post<any>(this.serviceUrl + id, item, httpOptions)\n            .pipe(\n                catchError(this.errorResponseHandler)\n            );\n    }\n}\n","import { Injectable } from '@angular/core';\n \n@Injectable(\n)\nexport class MraCommonService {\n    private storage:any = {};\n\n    constructor() {}\n    \n    public getFromStorage(name:string) {\n        return this.storage[name];\n    }\n    public putToStorage(name:string, value:any) {\n        this.storage[name] = value;\n    }\n}\n","export class Util {\n\n  static clone(obj:any):any {\n    let copy;\n\n    // Handle the 3 simple types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n\n    // Handle Date\n    if (obj instanceof Date) {\n        copy = new Date();\n        copy.setTime(obj.getTime());\n        return copy;\n    }\n\n    // Handle Array\n    if (obj instanceof Array) {\n        copy = [];\n        for (var i = 0, len = obj.length; i < len; i++) {\n            copy[i] = Util.clone(obj[i]);\n        }\n        return copy;\n    }\n\n    // Handle Object\n    if (obj instanceof Object) {\n        copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = Util.clone(obj[attr]);\n        }\n        return copy;\n    }\n\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n  }\n\n}\n","import { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Injector, EventEmitter } from '@angular/core';\n\nimport { Location } from '@angular/common';\n\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { ModalConfig, Modal} from './util.modal';\nimport { SnackBarConfig, SnackBar} from './util.snackbar';\nimport { ErrorToastConfig, ErrorToast} from './util.errortoast';\n\nimport { BaseService, ServiceError } from './base.service';\nimport { MraCommonService } from './common.service';\nimport { BaseComponentInterface } from './base.interface';\nimport { Util } from './util.tools';\n\nexport enum ViewType {\n    LIST,\n    DETAIL,\n    EDIT,\n}\n\nexport {ServiceError};\n\nexport class BaseComponent implements BaseComponentInterface {\n    protected objectKeys = Object.keys;\n  \n    private storage:any = {};\n\n    //For list and pagination\n    protected list:any[] = [];\n        \n    protected majorUi = true;\n    protected eventEmitter: EventEmitter<any> = new EventEmitter();\n    \n    protected page: number = 1;\n    protected per_page: number = 25;\n    protected total_count: number = 0;\n    protected total_pages: number = 0;\n    \n    private new_page;\n    \n    protected pages: number[] = [];\n    protected left_more:boolean = false;\n    protected right_more:boolean = false;\n\n    protected checkAll = false;\n    //used to mark deleted items, or items that will show sub-detail, etc.\n    protected checkedItem:boolean[] = [];\n    \n    //For edit and view details\n    protected detail:any = {};\n    private _detail:any = {}; //a clone and used to send/receive from next work\n    private _extra:any = {}; //extra info.\n    protected id:string;\n    protected subEdit = false; //a edit-sub component\n    //for fields with enum values\n    protected enums:any = {};\n    protected stringFields = [];\n    protected referenceFields: string[] = [];\n    protected referenceFieldsMap = {};\n    protected dateFields = [];\n    protected indexFields = [];\n    protected multiSelectionFields = [];\n    protected arrayFields = []; //element is [fieldName, elementType]\n    protected mapFields = []; //element is [fieldName, elementType, mapKey]\n    protected dateFormat = \"MM/DD/YYYY\";\n    protected timeFormat = \"hh:mm:ss\";\n\n    protected hiddenFields = []; //fields hide from view. Currrently used by \"Add\" view of edit-sub\n\n    protected ItemCamelName: string;\n    protected itemName: string;\n    protected parentItem: string;\n  \n    protected refreshing: boolean = false;\n  \n    protected commonService: MraCommonService;\n\n    constructor(\n        protected service: BaseService,\n        protected injector: Injector,\n        protected router: Router,\n        protected route: ActivatedRoute,\n        protected location: Location,\n        protected view: ViewType,\n        protected itemCamelName: string) {\n      \n        this.ItemCamelName = itemCamelName.charAt(0).toUpperCase() + itemCamelName.substr(1);\n        this.itemName = itemCamelName.toLowerCase();\n        this.parentItem = this.getParentRouteItem();\n        this.commonService = injector.get(MraCommonService);\n        \n    }\n    \n    protected onServiceError(error:ServiceError):void {\n        //clear any pending flags\n        this.refreshing = false;\n      \n        let errMsg:string;\n        let more:string;\n        if (error.clientErrorMsg) {\n            errMsg = error.clientErrorMsg;\n        }\n        else if (error.serverError) {\n            if (error.status == 401)  return; //Don't show unauthorized error\n            if (typeof error.serverError === 'object') {\n                errMsg = error.status + \": \" + JSON.stringify(error.serverError);\n            } else {\n                errMsg = error.status + \": \" +error.serverError;\n            }\n        }\n        console.info(\"Error: \" + errMsg);\n        if (!errMsg) errMsg = \"Unknown error.\";\n        if (errMsg.length > 80) {\n            more = errMsg;\n            errMsg = errMsg.substring(0, 80) + \"...\";\n        }\n        let errorToastConfig: ErrorToastConfig = {\n            content: errMsg,\n            more: more\n        }\n        let errorToast = new ErrorToast(errorToastConfig);\n        errorToast.show();\n    }\n\n    protected populatePages():void {        \n        this.pages = []\n        const SHOW_PAGE = 9;\n        const HALF = (SHOW_PAGE-1)/2;\n        \n        let min, max;\n        if (this.total_pages <= SHOW_PAGE) {\n            min = 1;\n            max = this.total_pages;\n            this.left_more = false; \n            this.right_more = false;\n        } else {\n            if (this.page - 1 < HALF) {\n                min = 1;\n                max = SHOW_PAGE-1;\n                this.left_more = false; \n                this.right_more = true;\n            } else if (this.total_pages - this.page < HALF) {\n                max = this.total_pages;\n                min = (this.total_pages - SHOW_PAGE + 1) + 1;\n                this.left_more = true; \n                this.right_more = false;\n            } else {\n                min = this.page - HALF + 1;\n                max = this.page + HALF - 1;\n                this.left_more = true; \n                this.right_more = true;\n            }\n        }\n        for (let i = min; i <= max; i++) {\n            this.pages.push(i);\n        }\n    }\n    \n    private getKey(key:string):string {\n        let url = this.router.url.split(';')[0].split('?')[0];\n        return url+ \":\" + key;\n    }\n    private putToStorage(key:string, value:any):void {\n        if (this.majorUi) {\n            //only major UI we want to cache and recover when user comes back\n            this.commonService.putToStorage(this.getKey(key), value);\n        } else {\n            this.storage[key] = value;\n        }\n    }\n    private getFromStorage(key:string):any {\n        if (this.majorUi) {\n            return this.commonService.getFromStorage(this.getKey(key));\n        } else {\n            return this.storage[key];\n        }\n    }\n    private routeToPage(page:number):void {\n        this.putToStorage(\"page\", page);\n        this.populateList();\n    }\n    \n    protected onNextPage():void {\n        if (this.page >= this.total_pages) return;\n        this.routeToPage(this.page + 1);\n    }\n    \n    protected onPreviousPage():void {\n        if (this.page <= 1) return;\n        this.routeToPage(this.page - 1);\n    }\n\n    protected onGotoPage(p:number):void {\n        if (p > this.total_pages || p < 1) return;\n        this.routeToPage(p)\n    }\n    \n    protected goBack() {\n        this.location.back();\n        /*\n        // window.history.back();\n        if (this.view != ViewType.EDIT)\n            this.location.back();\n        else {\n            let url = this.location.path(); //in EDIT view, the current url is skipped. So get the \"previous\" one from path.\n            this.router.navigateByUrl(url);\n        }\n        */\n    }\n    \n    protected stringify(detail:any): string {\n        let str = \"\";\n        for (let fnm of this.indexFields) {\n            if (detail[fnm] && typeof detail[fnm] != 'object') str += \" \" + detail[fnm];\n        }\n        if (!str)  {\n            for (let prop in detail) {\n                if (prop !== '_id' && detail[prop] && typeof detail[prop] != 'object') {\n                    str += \" \" + detail[prop];\n                }\n            }\n        }\n        if (!str) str = detail[\"_id\"]?detail[\"_id\"]:\"...\"\n        str = str.replace(/^\\s+|\\s+$/g, '')\n        if (str.length > 30) str = str.substr(0, 27) + '...';\n        return str;\n    }\n  \n    /***Start: handle reference fields***/\n    protected formatReferenceField(field: any, fieldName: string ):any {\n        let id, value;\n        if (typeof field == 'string') {\n            //assume this is the \"_id\", let see we have the cached details for this ref from service\n            let refDetail = this.commonService.getFromStorage(field);\n            if (refDetail && (typeof refDetail == 'object')) field = refDetail;\n            else {\n                id = field;\n                field = {'_id': id};\n            }\n        } else if (field && (typeof field == 'object') ) {\n            id = field['_id'];\n            let referIndex = '';\n            for (let k in  field) {\n                if (k != '_id') referIndex += \" \" + field[k];\n            }\n            referIndex = referIndex.replace(/^\\s+|\\s+$/g, '');\n            if (referIndex.length >= 20) referIndex = referIndex.substring(0, 20) + \"...\";\n            field = {'_id': id, 'value': referIndex? referIndex: fieldName};\n        } else {//not defined\n            field = {'_id': id, 'value': value};\n        }\n        return field;\n    }\n    protected formatReference(detail:any ):any {\n        for (let fnm of this.referenceFields) {\n            detail[fnm] = this.formatReferenceField(detail[fnm], fnm);\n        }\n        return detail;\n    }\n    protected deFormatReference(detail:any ):any {\n        for (let fnm of this.referenceFields) {\n            if (typeof detail[fnm] !== 'object') { //not defined\n                //let date values undefined\n                delete detail[fnm];\n            } else {\n                let id = detail[fnm]['_id'];\n                if (typeof id !== 'string') delete detail[fnm];\n                else detail[fnm] = id;\n            }\n        }\n        return detail;\n    }\n    \n    protected clearFieldReference(field:any ):any {\n        for (let prop in field) {\n            field[prop] = undefined;\n        }\n        return field;\n    }\n\n    protected isDefinedFieldReference(field:any ):any {\n        if ('_id' in field && typeof field['_id'] == 'string') return true;\n        return false;\n    }\n    /***Start: handle date fields***/    \n    protected formatDateField(field:string):any {\n        let fmt = this.dateFormat;\n        let t_fmt = this.timeFormat;\n        let d, M, yyyy, h, m, s;\n\n        let dt = new Date(field);\n        \n        let dd, MM, hh, mm, ss;\n        d = dt.getDate();\n        M = dt.getMonth()+1; \n        yyyy = dt.getFullYear();\n        \n        let yy = yyyy.toString().slice(2);\n        h = dt.getHours();\n        m = dt.getMinutes();\n        s = dt.getSeconds();\n        \n        dd= d<10? '0'+d: d.toString();\n        MM= M<10? '0'+M: M.toString();\n        hh= h<10? '0'+h: h.toString();\n        mm= m<10? '0'+m: m.toString();\n        ss= s<10? '0'+s: s.toString();\n        \n        let value = fmt.replace(/yyyy/ig, yyyy.toString()).\n                       replace(/yy/ig, yy.toString()).\n                       replace(/MM/g, MM.toString()).\n                       replace(/dd/ig, dd.toString());\n      \n        let t_value = t_fmt.replace(/hh/ig, hh.toString()).\n                       replace(/mm/g, mm.toString()).\n                       replace(/ss/ig, ss.toString());\n        /*Datepicker uses NgbDateStruct as a model and not the native Date object. \n        It's a simple data structure with 3 fields. Also note that months start with 1 (as in ISO 8601).\n        \n        we add h, m, s here\n        */\n        //\"from\" and \"to\" used for search context. pop: show the selection popup\n        return {'date':{ day: d, month: M, year: yyyy}, 'value': value, 'from': undefined, 'to': undefined, 'pop':false,\n                'time':{ hour: h, minute: m, second: s}, 't_value': value, 't_from': undefined, 't_to': undefined, 't_pop':false}\n\n    }\n    \n    protected formatDate(detail:any ):any {\n        for (let fnm of this.dateFields) {\n            let value, date;\n            if (typeof detail[fnm] !== 'string') { //not defined\n                //important: let date values undefined. \"from\" and \"to\" used for search context. pop: show the selection popup\n                detail[fnm] = {'date':undefined, 'value': undefined, 'from': undefined, 'to': undefined, 'pop':false};\n            }\n            else {\n                detail[fnm] = this.formatDateField(detail[fnm]);\n            }\n        }\n        return detail;\n    }\n    \n    protected deFormatDateField(date:any):string {\n        let d, M, yyyy, h, m, s;\n        \n        yyyy = date.year;\n        M = date.month - 1;\n        d = date.day;\n        \n        if (typeof yyyy !== 'number' || typeof M !== 'number' || typeof d !== 'number') return null;\n        else {\n            let dt = new Date(yyyy, M, d, 0, 0, 0, 0);\n            return dt.toISOString();\n        }\n    }\n    \n    protected deFormatDate(detail:any ):any {\n        for (let fnm of this.dateFields) {\n            let value;\n            if (typeof detail[fnm] !== 'object') { //not defined\n                //let date values undefined\n                delete detail[fnm];\n            }\n            else {\n                if (! detail[fnm].date) delete detail[fnm];\n                else {\n                    let dateStr = this.deFormatDateField(detail[fnm].date);\n                    if (!dateStr) delete detail[fnm];\n                    else detail[fnm] = dateStr;\n                }\n            }\n        }\n        return detail;\n    }\n    protected clearFieldDate(field:any ):any {\n        for (let prop in field) {\n            field[prop] = undefined;\n        }\n        return field;\n    }\n    protected isDefinedFieldDate(field:any ):any {\n        if (typeof field === 'object') {\n                if (typeof field['date'] == 'object') return true;\n                if (typeof field['from'] == 'object') return true;\n                if (typeof field['to'] == 'object') return true;\n        }\n        return false;\n    }\n\n    /***Start: handle array of multi-selection fields***/\n    protected formatArrayMultiSelectionField(field: any, enums: any): any {\n        let selectObj = {};\n        let value = \"\";\n        for (let e of enums) {\n            selectObj[e] = false; //not exist\n        }\n        if (Array.isArray(field)) { //not defined\n            for (let e of field) {\n                selectObj[e] = true;  //exist.\n            }\n            value = field.join(\" | \")\n        }\n        return {'selection': selectObj, value: value};\n\n    }\n    protected formatArrayMultiSelection(detail:any ):any {\n        for (let fnm of this.multiSelectionFields) {\n            detail[fnm] = this.formatArrayMultiSelectionField(detail[fnm], this.enums[fnm]);\n        }\n        return detail;\n    }\n    \n    protected deFormatArrayMultiSelection(detail:any ):any {\n        for (let fnm of this.multiSelectionFields) {\n            if (typeof detail[fnm] !== 'object') { //not defined\n                delete detail[fnm];\n            }\n            else {\n                if (! detail[fnm].selection) delete detail[fnm];\n                else {\n                    let selectArray = [];\n                    for (let e of this.enums[fnm]) {\n                        if (detail[fnm].selection[e]) selectArray.push(e);\n                    }\n\n                    if (selectArray.length > 0) detail[fnm] = selectArray;\n                    else delete detail[fnm];\n                }\n            }\n        }\n        return detail;\n    }\n    protected clearFieldArrayMultiSelection(field:any ):any {\n        if (!field['selection']) return field;\n        for (let prop in field['selection']) {\n            field['selection'][prop] = false; //not exist\n        }\n        return field;\n    }\n\n    protected isDefinedFieldArrayMultiSelection(field:any ):any {\n        if ('selection' in field && typeof field['selection'] == 'object') {\n            let keys = Object.keys(field['selection']);\n            return keys.some(e=>{return field['selection'][e]});\n        }\n        return false;\n    }\n    protected multiselectionSelected(fieldName) {\n        if (!this.detail[fieldName] || typeof this.detail[fieldName]['selection'] != 'object') {\n            return false;\n        }\n        return this.isDefinedFieldArrayMultiSelection(this.detail[fieldName]);\n    }\n    /***End: handle array of multi-selection fields***/\n    /***Start: handle map fields***/\n    protected formatMapField(field: any, elementType: string): any {\n        let selectObj = {};\n        let values = [];\n        if (typeof field == 'object') {\n            selectObj = field;\n            for (let e in field) {\n              if (elementType === 'SchemaString') {\n                values.push(e + \"(\" + field[e] + \")\");\n              }\n            }\n        }\n        values = values.filter(x=>!!x);\n        let value = values.join(\" | \")\n        return {'selection': selectObj, value: value, keys: []};\n\n    }\n    protected formatMapFields(detail:any ):any {\n        for (let f of this.mapFields) {\n            //[fieldName, elementType]\n            detail[f[0]] = this.formatMapField(detail[f[0]], f[1]);\n        }\n        return detail;\n    }\n\n    protected deFormatMapFields(detail:any ):any {\n        for (let f of this.mapFields) {\n            //[fieldName, elementType]\n            let fnm = f[0];\n            let elementType = f[1];\n          \n            if (typeof detail[fnm] !== 'object') { //not defined\n                delete detail[fnm];\n            }\n            else {\n                if (! detail[fnm].selection) delete detail[fnm];\n                else {\n                    let selectMap = detail[fnm].selection;\n                    for (let e in detail[fnm].selection) {\n                      if (elementType === 'SchemaString') {\n                        ;\n                      }\n                    }\n\n                    if (Object.keys(selectMap).length > 0) detail[fnm] = selectMap;\n                    else delete detail[fnm];\n                }\n            }\n        }\n        return detail;\n    }\n\n    protected clearFieldMap(field:any ):any {\n        if (!field['selection']) return field;\n        field['selection'] = {};\n        field.value = undefined;\n        return field;\n    }\n\n    protected isDefinedFieldMap(field:any ):any {\n        if ('selection' in field && typeof field['selection'] == 'object') {\n            return Object.keys(field['selection']).length > 0;\n        }\n        return false;\n    }\n    protected mapSelected(fieldName) {\n        if (!this.detail[fieldName] || typeof this.detail[fieldName]['selection'] != 'object') {\n            return false;\n        }\n        return this.isDefinedFieldMap(this.detail[fieldName]);\n    }\n    /***End: handle map fields***/\n    /***Start: handle array fields***/\n    protected formatArrayField(field: any, elementType: string): any {\n        let selectArray = [];\n        let values = [];\n        if (Array.isArray(field)) { //not defined\n            for (let e of field) {\n              if (elementType === 'ObjectId') {\n                let ref = this.formatReferenceField(e, \"...\");\n                selectArray.push(ref);\n                values.push(ref.value);\n              } else if (elementType === 'SchemaString') {\n                selectArray.push(e);\n                values.push(e);\n              }\n            }\n        }\n        values = values.filter(x=>!!x);\n        let value = values.join(\" | \")\n        return {'selection': selectArray, value: value};\n\n    }\n    protected formatArrayFields(detail:any ):any {\n        for (let f of this.arrayFields) {\n            //[fieldName, elementType]\n            detail[f[0]] = this.formatArrayField(detail[f[0]], f[1]);\n        }\n        return detail;\n    }\n\n    protected deFormatArrayFields(detail:any ):any {\n        for (let f of this.arrayFields) {\n            //[fieldName, elementType]\n            let fnm = f[0];\n            let elementType = f[1];\n          \n            if (typeof detail[fnm] !== 'object') { //not defined\n                delete detail[fnm];\n            }\n            else {\n                if (! detail[fnm].selection) delete detail[fnm];\n                else {\n                    let selectArray = [];\n                    for (let e of detail[fnm].selection) {\n                      if (elementType === 'ObjectId') {\n                        if (e && e['_id'] && typeof e['_id'] === 'string') selectArray.push(e['_id']);\n                      } else if (elementType === 'SchemaString') {\n                        if (e) selectArray.push(e);\n                      }\n                    }\n\n                    if (selectArray.length > 0) detail[fnm] = selectArray;\n                    else delete detail[fnm];\n                }\n            }\n        }\n        return detail;\n    }\n\n    protected clearFieldArray(field:any ):any {\n        if (!field['selection']) return field;\n        field['selection'] = [];\n        field.value = undefined;\n        return field;\n    }\n\n    protected isDefinedFieldArray(field:any ):any {\n        if ('selection' in field && Array.isArray(field['selection'])) {\n            return field['selection'].length > 0;\n        }\n        return false;\n    }\n    protected arraySelected(fieldName) {\n        if (!this.detail[fieldName] || !Array.isArray(this.detail[fieldName]['selection'])) {\n            return false;\n        }\n        return this.isDefinedFieldArray(this.detail[fieldName]);\n    }\n    /***End: handle array fields***/\n  \n    protected formatDetail(detail:any ):any {\n        detail = this.formatReference(detail);\n        detail = this.formatDate(detail);\n        detail = this.formatArrayMultiSelection(detail);\n        detail = this.formatArrayFields(detail);\n        detail = this.formatMapFields(detail);\n        return detail;\n    }    \n    \n    protected deFormatDetail(detail:any ):any {\n        let cpy = Util.clone(detail);\n        \n        cpy = this.deFormatReference(cpy);\n        cpy = this.deFormatDate(cpy);\n        cpy = this.deFormatArrayMultiSelection(cpy);\n        cpy = this.deFormatArrayFields(cpy);\n        cpy = this.deFormatMapFields(cpy);\n        return cpy;\n    }\n    \n    protected populateDetail(id: string):EventEmitter<any> {\n      return this.populateDetailForAction(id, null);\n    }\n\n    protected populateDetailForAction(id: string, action: string):EventEmitter<any> {\n      //action: eg: action=edit  -> get detail for editing purpose \n      this.service.getDetailForAction(id, action).subscribe(\n        detail => {\n            let originalDetail = Util.clone(detail);\n            if (detail[\"_id\"]) this.commonService.putToStorage(detail[\"_id\"], originalDetail);//cache it\n            \n            this.detail = this.formatDetail(detail);\n            this.extraFieldsUnload();//unload data to text editors, etc\n            if (action == 'edit') {\n              this.extraInfoPopulate();//collect other info required for edit view\n            }\n            if (this.refreshing) {\n              this.refreshing = false;\n              let snackBarConfig: SnackBarConfig = {\n                  content: \"Detail refreshed\"\n              }\n              let snackBar = new SnackBar(snackBarConfig);\n              snackBar.show();\n            }\n            this.eventEmitter.emit(this.detail);\n        },\n        this.onServiceError\n      );\n      return this.eventEmitter;\n    }\n    \n\n    protected populateDetailFromCopy(copy_id:string):void {\n      this.service.getDetail(copy_id).subscribe(\n        detail => {            \n            this.detail = this.formatDetail(detail);\n            delete this.detail[\"_id\"];\n            this.extraFieldsUnload();//unload data to text editors, etc\n            this.extraInfoPopulate();//collect other info required for create view\n        },\n        this.onServiceError\n      );\n    }\n\n    protected extraInfoPopulate() {\n        for (let fieldDef of this.mapFields) { \n          //fieldDef: [field.fieldName, field.elementType, keyType, keyRefName, keyRefService, keyRefSubField]\n          let fieldName = fieldDef[0]; //this.<keyRefName>.<keyRefSubField>\n          let mapKeyType = fieldDef[2]; //this.<keyRefName>.<keyRefSubField>\n          let keyArray = [];\n          if (mapKeyType == \"ObjectId\") {\n            let keyRefName = fieldDef[3];\n            let recordKey = 'key-id-' + keyRefName;\n            let refService = this.injector.get(fieldDef[4]);\n            let id = this.detail[keyRefName]?this.detail[keyRefName]['_id'] : undefined;\n            if (!id) continue;\n            let mapField = this.detail[fieldName];\n            if (mapField[recordKey] == id) continue; //already populated for the same id\n            \n            refService.getDetail(id).subscribe(\n              detail => {\n                if (Array.isArray(detail[fieldDef[5]])) {\n                  keyArray = detail[fieldDef[5]];\n                  mapField['keys'] = keyArray;\n                  mapField[recordKey] = id; //record that keys is populated from this object\n                  if (mapField['selection']) {\n                    for (let k of keyArray) {\n                      if (!(k in mapField['selection'])) mapField['selection'][k] = \"\";\n                    }\n                  }\n                }\n              },\n              this.onServiceError\n            );\n          }          \n        }\n    }\n  \n    private equalTwoSearchContextArrays (arr1, arr2) {\n      if (!arr1) arr1 = [];\n      if (!arr2) arr2 = [];\n      if (arr1.length == 0 && arr2.length == 0) return true;\n      //all object in array has format of {'field': 'value'} format\n      function compareObj(a, b) {\n          let a_s = JSON.stringify(a), b_s = JSON.stringify(b)\n          if (a_s < b_s)\n              return -1;\n          if (a_s > b_s)\n              return 1;\n          return 0;\n      }\n      arr1 = arr1.sort(compareObj);\n      arr2 = arr2.sort(compareObj);\n      if (JSON.stringify(arr1) == JSON.stringify(arr2)) return true;\n      return false;\n    }\n\n    protected processSearchContext() {\n        this.moreSearchOpened = false;\n        let d = this.detail;\n        for (let s of this.stringFields) {\n            d[s] = this.searchText;\n        }\n        let orSearchContext = [], andSearchContext = [];\n        for (let field in d) {\n            if (typeof d[field] == 'string') {\n                let o = {}\n                o[field] = d[field];\n                orSearchContext.push(o);\n            }\n        }\n        \n        this.searchMoreDetail = []\n        let d2 = this.deFormatDetail(d);//undefined field is deleted after this step\n        for (let field in d2) {\n            if (this.stringFields.indexOf(field) == -1) {//string fields already put to orSearchContext\n                let o = {}\n                let valueToShow;\n\n                o[field] = d2[field];\n\n                if (this.multiSelectionFields.includes(field)) {\n                    o[field] = {$in: d2[field]}; //use $in for or, and $all for and\n\n                    let t = this.formatArrayMultiSelectionField(d2[field], this.enums[field]);\n                    valueToShow = t.value;\n                } else if (this.arrayFields.some(x=>x[0] == field)) {                  \n                    o[field] = {$in: d2[field]}; //use $in for or, and $all for and\n                  \n                    valueToShow = d[field]['value'];\n                } else if (this.dateFields.includes(field)) {\n                    let t = this.formatDateField(d2[field]);\n                    valueToShow = t.value;\n                } else if (this.referenceFields.includes(field)) {\n                    valueToShow = valueToShow = d[field]['value'];\n                } else {\n                    valueToShow = d[field];//take directoy from what we get \n                }\n\n                this.searchMoreDetail.push([field, valueToShow]);\n                andSearchContext.push(o);\n            }\n        }\n        //Handle date range selection. These fields are not in d2, because field.date is undefined.\n        for (let prop of this.dateFields) {\n            let o = {};\n            let valueToShow = \"\";\n            \n            o[prop] = {};\n            if (typeof d[prop] !== 'object') { //not defined\n                continue;\n            }\n            if (!d[prop]['from'] && !d[prop]['to']) { //not range\n                continue;\n            }\n            if (d[prop]['from']) {\n                o[prop]['from'] = this.deFormatDateField(d[prop]['from']);\n                valueToShow += this.formatDateField(o[prop]['from']).value;\n            }\n            valueToShow += \" ~ \";\n            if (d[prop]['to']) {\n                o[prop]['to'] = this.deFormatDateField(d[prop]['to']);\n                valueToShow += this.formatDateField(o[prop]['to']).value;\n            }\n            this.searchMoreDetail.push([prop, valueToShow]);\n            andSearchContext.push(o);\n        }\n\n        let searchContext = {'$and': [{'$or': orSearchContext},{'$and': andSearchContext}]};\n        /* searchContext ={'$and', [{'$or', []},{'$and', []}]}\n        */\n        let context = this.getFromStorage(\"searchContext\");\n        if (context && context[\"$and\"]) {\n            let cachedOr, cachedAnd;\n            for (let sub of context[\"$and\"]) {\n                if ('$and' in sub) cachedAnd = sub['$and'];\n                else if ('$or' in sub) cachedOr = sub['$or'];\n            }\n            if (this.equalTwoSearchContextArrays(cachedOr, orSearchContext) \n                && this.equalTwoSearchContextArrays(cachedAnd, andSearchContext)) {\n                return;\n            }\n        } \n        \n        if (orSearchContext.length == 0 && andSearchContext.length == 0) searchContext = null;\n        this.putToStorage(\"searchContext\", searchContext);\n        this.putToStorage(\"searchText\", this.searchText);\n        this.putToStorage(\"page\", 1);//start from 1st page\n        this.putToStorage(\"searchMoreDetail\", this.searchMoreDetail);\n        this.putToStorage(\"detail\", this.detail);\n    }\n    protected searchList():void {\n        this.processSearchContext();\n        //update the URL\n        this.router.navigate(['.', {}], {relativeTo: this.route});//start from 1st page\n        this.putToStorage(\"page\", 1);//start from 1st page\n        this.populateList();\n    }\n    protected loadUIFromCache():void {\n        //Now let's reload the search condition to UI\n        this.searchText = this.getFromStorage(\"searchText\");\n        this.searchMoreDetail = this.getFromStorage(\"searchMoreDetail\");\n        let detail = this.getFromStorage(\"detail\");\n        if (detail) this.detail = detail;\n    }\n    \n    protected populateList():EventEmitter<any> {\n        //First let's handle page\n        let new_page;\n        let searchContext, searchText;\n\n        let url_page = parseInt(this.route.snapshot.paramMap.get('page'));\n        let cached_page = parseInt(this.getFromStorage(\"page\"));\n            \n        if (cached_page) { \n            new_page = cached_page;\n            if (cached_page == 1)\n                this.router.navigate(['.', {}], {relativeTo: this.route, });//update the url\n            else\n                this.router.navigate(['.', {page: cached_page}], {relativeTo: this.route, });//update the url\n        }\n        else if (url_page) new_page = url_page;\n        else new_page = 1;\n\n        searchContext = this.getFromStorage(\"searchContext\");\n        this.loadUIFromCache();      \n\n        this.service.getList(new_page, this.per_page, searchContext).subscribe(\n          result => { \n            this.list = result.items.map(x=>this.formatDetail(x));\n            this.page = result.page;\n            this.per_page = result.per_page;\n            this.total_count = result.total_count;\n            this.total_pages = result.total_pages;\n            this.populatePages();\n            \n            this.checkedItem = \n                Array.apply(null, Array(this.list.length)).map(Boolean.prototype.valueOf,false);\n            this.checkAll = false;\n            \n            if (this.refreshing) {\n              this.refreshing = false;\n              let snackBarConfig: SnackBarConfig = {\n                  content: \"List refreshed\"\n              }\n              let snackBar = new SnackBar(snackBarConfig);\n              snackBar.show();\n            }\n            this.eventEmitter.emit(this.list);\n          },\n          this.onServiceError\n        );\n      return this.eventEmitter;\n    }\n    \n    \n    /*UI operations handlers*/\n    public onRefresh():void {\n        if (this.view == ViewType.LIST) {\n          this.refreshing = true;\n          this.populateList();\n        } else if (this.view == ViewType.DETAIL) {\n          this.refreshing = true;\n          if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n          if (this.id) this.populateDetail(this.id);\n          else console.error(\"Routing error for detail view... no id...\");\n        }\n    }\n    \n    public onCheckAllChange():void {\n        this.checkedItem = \n             Array.apply(null, Array(this.list.length)).\n                map(Boolean.prototype.valueOf,this.checkAll);\n    }\n    \n    public isItemSelected():boolean {\n        return this.checkedItem.some((value)=>{return value;})\n    }\n\n    public onDeleteSelected():void {\n        let deletedItem = [];\n        this.checkedItem.forEach((value, index) => {\n                if (value) {\n                    deletedItem.push(this.list[index][\"_id\"]);\n                }\n            });\n        \n        let modalConfig: ModalConfig = {\n        title: \"Delete Confirmation\",\n        content: \"Are you sure you want to delete selected items from the system?\",\n        //list of button text\n        buttons: ['Delete', 'Cancel'],\n        //list of button returns when clicked\n        returns: [true, false],\n        callBack: (result) => {\n            if (result) {\n                this.service.deleteManyByIds(deletedItem).subscribe(\n                    result => {\n                        let snackBarConfig: SnackBarConfig = {\n                            content: this.ItemCamelName + \" deleted\"\n                        }\n                        let snackBar = new SnackBar(snackBarConfig);\n                        snackBar.show();\n\n                        if (this.view != ViewType.LIST)\n                            this.router.navigate(['../../list'], {relativeTo: this.route});\n                        else {\n                            let len = this.checkedItem.length;\n                            for (let i = 0; i < len; i++ ) {\n                                let idx = len - 1 - i;\n                                let value = this.checkedItem[idx];\n                                if (value) {\n                                    this.list.splice(idx, 1);\n                                    this.checkedItem.splice(idx,1);\n                                    this.total_count -= 1;\n                                }\n                            };\n                        }\n                    },\n                    this.onServiceError\n                );\n            }\n          }\n        }\n      let modal = new Modal(modalConfig);\n      modal.show();\n    }\n    \n    public onDelete(id:string, idx: number):void {      \n      let modalConfig: ModalConfig = {\n        title: \"Delete Confirmation\",\n        content: \"Are you sure you want to delete this \" + this.itemCamelName + \" from the system?\",\n        //list of button text\n        buttons: ['Delete', 'Cancel'],\n        //list of button returns when clicked\n        returns: [true, false],\n        callBack: (result) => {\n            if (result) {\n                this.service.deleteOne(id).subscribe(\n                    result => {\n                        let snackBarConfig: SnackBarConfig = {\n                            content: this.ItemCamelName + \" deleted\"\n                        }\n                        let snackBar = new SnackBar(snackBarConfig);\n                        snackBar.show();\n\n                        if (this.view != ViewType.LIST)\n                            this.router.navigate(['../../list'], {relativeTo: this.route});\n                        else if (idx!=null && this.list) {\n                                this.list.splice(idx, 1);\n                                this.checkedItem.splice(idx,1);\n                                this.total_count -= 1;\n                            }\n                    },\n                    this.onServiceError\n                );\n            }\n        }\n      }\n      \n      let modal = new Modal(modalConfig);\n      modal.show();\n    }\n    \n    public onSubmit():void {\n      if (!this.extraFieldsLoad()) return; //error from other non ngModel fields;\n        \n      this._detail = this.deFormatDetail(this.detail);\n      if (this.id) {\n          this.service.updateOne(this.id, this._detail).subscribe(\n            result => {\n                var snackBarConfig: SnackBarConfig = {\n                    content: this.ItemCamelName + \" updated.\"\n                }\n                var snackBar = new SnackBar(snackBarConfig);\n                snackBar.show();\n                \n                this.router.navigate(['../../detail', this.id], {relativeTo: this.route});\n            },\n            this.onServiceError\n          );\n      }\n      else {\n          this.service.createOne(this._detail).subscribe(\n            result => {\n                let action = this.subEdit? \" added\":\" created.\";\n\n                var snackBarConfig: SnackBarConfig = {\n                    content: this.ItemCamelName + action\n                }\n                var snackBar = new SnackBar(snackBarConfig);\n                snackBar.show();\n                \n                this.id = result[\"_id\"];\n                this._detail = result;\n\n                if (this.subEdit) {\n                    this.done.emit(true);\n                } else {\n                    this.router.navigate(['../detail', this.id], {relativeTo: this.route});\n                } \n            },\n            this.onServiceError\n          );\n      }\n    }\n    \n    public editCancel(): void {\n        if (this.subEdit) {\n            this.done.emit(false);\n        } else {\n            this.goBack();\n        } \n    }\n\n    protected clickedId = null;\n    public onDisplayRefClicked(fn:string, detail:any, event:any):void {\n        let ref = this.getRefFromField(fn);\n        let d = detail;\n        \n        if (d && d['_id']) {\n            if (this.list) {\n                for (let item of this.list){\n                    if (item[fn] == d) this.clickedId = item['_id'];\n                }\n            }\n            this.router.navigate([ref, 'detail', d['_id']], {relativeTo: this.getParentActivatedRouter() });\n        }\n        if (event) event.stopPropagation();\n    }\n\n    public onDetailLinkClicked(id:string):void {\n        this.clickedId = id; \n        this.router.navigate([this.itemName, 'detail', id], {relativeTo: this.getParentActivatedRouter() });\n    }\n    \n    protected getRefFromField(fn:string):string {\n        return this.referenceFieldsMap[fn];\n    }\n\n    public clearValueFromDetail(field:string):void {\n        if (!this.detail.hasOwnProperty(field)) return;\n        if (typeof this.detail[field] == 'undefined') return;\n        if (typeof this.detail[field] == 'object') {//reference field or date\n            if (this.multiSelectionFields.includes(field)) {\n                this.detail[field] = this.clearFieldArrayMultiSelection(this.detail[field]);\n            } else if (this.arrayFields.some(x=>x[0] == field)) {\n                this.detail[field] = this.clearFieldArray(this.detail[field]);\n            } else if (this.mapFields.some(x=>x[0] == field)) {\n                this.detail[field] = this.clearFieldMap(this.detail[field]);\n            } else if (this.dateFields.includes(field)) {\n                this.detail[field] = this.clearFieldDate(this.detail[field]);\n            } else if (this.referenceFields.includes(field)) {\n                this.detail[field] = this.clearFieldReference(this.detail[field]);\n            }\n            //check if any info needs to change after clear certain values;\n            this.extraInfoPopulate();\n        } else {\n            delete this.detail[field];\n        }\n    }\n    public clearValueFromArrayField(field: string, idx: number):void {\n        if (this.detail[field]['selection']) {\n            this.detail[field]['selection'] = this.detail[field]['selection'].filter((x,i)=> i != idx );\n            //check if any info needs to change after clear certain values;\n            this.extraInfoPopulate();\n        }\n    }\n    public clearValueFromMapField(field: string, key: string):void {\n        if (this.detail[field]['selection']) {\n            delete this.detail[field]['selection'][key];\n            //check if any info needs to change after clear certain values;\n            this.extraInfoPopulate();\n        }\n    }\n    public clearValueFromMapKey(field: string, key: string):void {\n        if (this.detail[field]['selection']) {\n            this.detail[field]['selection'][key] = undefined;\n            //check if any info needs to change after clear certain values;\n            this.extraInfoPopulate();\n        }\n    }\n  \n    public checkValueDefinedFromDetail(field:string):boolean {\n        let d = this.detail;\n        if (!d.hasOwnProperty(field)) return false;\n        if (typeof d[field] == 'undefined') return false;\n        if (typeof this.detail[field] == 'number' \n            || typeof d[field] == 'string'\n            || typeof d[field] == 'boolean') return true;\n        if (typeof d[field] == 'object') {\n            if (this.multiSelectionFields.includes(field)) {\n                return this.isDefinedFieldArrayMultiSelection(d[field]);\n            } else if (this.arrayFields.some(x=>x[0] == field)) {\n                return this.isDefinedFieldArray(d[field]);\n            } else if (this.mapFields.some(x=>x[0] == field)) {\n                return this.isDefinedFieldMap(d[field]);\n            } else if (this.dateFields.includes(field)) {\n                return this.isDefinedFieldDate(d[field]);\n            } else if (this.referenceFields.includes(field)) {\n                return this.isDefinedFieldReference(d[field]);\n            }\n        }\n        return false;\n    }\n\n    public clearValueFromDetailAndSearchList(field:string):void {\n        this.clearValueFromDetail(field);\n        this.searchList();\n    }\n    \n    public onAddArrayItem(fieldName:string) {\n        if (this.arrayFields.some(x=>x[0] == fieldName)) {\n          if (this.detail[fieldName]['new']) { //where new added item is stored\n            let item = this.detail[fieldName]['new'];\n            this.detail[fieldName]['new'] = undefined; //clear it\n            \n            this.detail[fieldName]['selection'].push(item);\n          \n            let values = [];\n            if (this.detail[fieldName]['value']) values = this.detail[fieldName]['value'].split(' | ')\n            values.push(item); //display value\n            values = values.filter(x=>!!x);\n            this.detail[fieldName]['value'] = values.join(' | ');\n            \n            //see if related info needs to change after the change of this value\n            this.extraInfoPopulate();\n          }\n        }                    \n    }\n    public onAddMapItem(fieldName:string) {\n        if (this.mapFields.some(x=>x[0] == fieldName)) {\n          if (this.detail[fieldName]['new']) { //where new added item is stored\n            let item = this.detail[fieldName]['new'];\n            this.detail[fieldName]['new'] = undefined; //clear it\n            \n            this.detail[fieldName]['selection'][item] = undefined; //move to selection object\n            \n            //TODO: this.detail[fieldName]['value'] change\n            \n            //see if related info needs to change after the change of this value\n            this.extraInfoPopulate();\n          }\n        }                    \n    }\n    //**** For parent component of modal UI\n    protected refSelectDirective:any;\n    protected selectComponents:any; //{fieldName: component-type} format\n    protected componentFactoryResolver: any; //injected by extended class, if needed.\n    private componentSubscription\n    public onRefSelect(fieldName:string) {\n        if (!this.refSelectDirective) {\n          console.warn(\"No reference directive for field: \", fieldName);\n          return;\n        }\n        let viewContainerRef = this.refSelectDirective.viewContainerRef;\n        viewContainerRef.clear();\n        \n        if (!this.selectComponents[fieldName]) {\n          console.warn(\"No reference defined for field: \", fieldName);\n          return;\n        }\n        let componentRef = this.selectComponents[fieldName][\"componentRef\"];\n        if (!componentRef) {\n            let comType = this.selectComponents[fieldName][\"select-type\"]\n            if (!comType) console.warn(\"No component type found for reference field \", fieldName);\n\n            let componentFactory = this.componentFactoryResolver.resolveComponentFactory(comType);\n            componentRef = viewContainerRef.createComponent(componentFactory);//create and insert in one call\n            this.selectComponents[fieldName][\"componentRef\"] = componentRef;//save it\n        } else {\n            viewContainerRef.insert(componentRef.hostView);\n        }\n        \n        let componentInstance = <BaseComponentInterface>componentRef.instance;\n        if (this.detail[fieldName]) {\n            if (this.referenceFields.includes(fieldName)) {\n                componentInstance.inputData = this.detail[fieldName]['_id'];\n            }            \n        }\n        componentInstance.setFocus();\n        \n \n        this.componentSubscription = componentInstance.done.subscribe( (val) => {\n            if (val) {\n                this.componentSubscription.unsubscribe();\n                viewContainerRef.detach(); //only detach. not destroy\n            }\n            let outputData = componentInstance.outputData;\n            if (outputData) {\n                switch (outputData.action){\n                    case \"selected\":\n                        if (this.arrayFields.some(x=>x[0] == fieldName)) {\n                            this.detail[fieldName]['selection'].push( outputData.value);\n                          \n                            let values = [];\n                            if (this.detail[fieldName]['value']) values = this.detail[fieldName]['value'].split(' | ')\n                            values.push(outputData.value.value); //display value\n                            values = values.filter(x=>!!x);\n                            this.detail[fieldName]['value'] = values.join(' | ');\n                        } else if (this.referenceFields.includes(fieldName)) {\n                            this.detail[fieldName] = outputData.value;\n                        }                    \n                        //trigger extraInfo populate, once reference changed.\n                        this.extraInfoPopulate();\n                        break;\n                    case \"view\":\n                        this.onRefShow(fieldName, \"select\", outputData.value);//value is _id\n                        break;\n                    default:\n                        break;\n                }                \n            }\n        });\n    }\n    \n    public onRefShow(fieldName:string, action:string, id:string) {\n        if (!id && this.detail[fieldName]) id = this.detail[fieldName]['_id'];\n        if (!id) {\n          console.error('Show reference but no id is given.');\n          return;\n        }\n        let viewContainerRef = this.refSelectDirective.viewContainerRef;\n        viewContainerRef.clear();\n        \n        let detailType = action + \"-detail-type\"; //eg: select-detail-type, pop-detail-type\n        let comType = this.selectComponents[fieldName][detailType]\n        if (!comType) {\n          console.error(\"No component type found for: %s\", detailType);\n          return;\n        }\n        let componentFactory = this.componentFactoryResolver.resolveComponentFactory(comType);\n        let componentRef = viewContainerRef.createComponent(componentFactory);//create and insert in one call\n\n        let componentInstance = <BaseComponentInterface>componentRef.instance;\n        componentInstance.inputData = id;\n        componentInstance.setFocus();\n       \n        componentInstance.done.subscribe( (val) => {\n           if (val) {\n               componentInstance.done.unsubscribe();\n               viewContainerRef.clear();\n           }\n           let outputData = componentInstance.outputData;\n            if (outputData) {\n                switch (outputData.action){\n                    case \"selected\":\n                        if (this.arrayFields.some(x=>x[0] == fieldName)) {\n                            this.detail[fieldName]['selection'].push( outputData.value);\n                          \n                            let values = [];\n                            if (this.detail[fieldName]['value']) values = this.detail[fieldName]['value'].split(' | ')\n                            values.push(outputData.value.value); //display value\n                            values = values.filter(x=>!!x);\n                            this.detail[fieldName]['value'] = values.join(' | ');\n                        } else if (this.referenceFields.includes(fieldName)) {\n                            this.detail[fieldName] = outputData.value;\n                        }                    \n                        //trigger extraInfo populate, once reference changed.\n                        this.extraInfoPopulate();\n                        break;\n                    case \"back\":\n                        this.onRefSelect(fieldName);\n                        break;\n                    default:\n                        break;\n                }                \n            }\n        });\n    }\n    \n    //Following havn't been used yet\n    /*\n    private typingTimer;\n    public onKeyUp(fieldName:string, value:string):void {\n        clearTimeout(this.typingTimer);\n    \n        this.typingTimer = setTimeout(function () {\n            console.log('Input Value:', value);\n        }, 1000);\n    }\n    */\n    //**** For child component of modal UI\n    public inputData;\n    public outputData;\n    public done:any;\n    protected focusEl; //ElementRef\n    setFocus() {\n        if (this.focusEl)\n            this.focusEl.nativeElement.focus();\n    }\n    uiCloseModal() {\n        this.outputData = null;\n        this.done.emit(true);\n    }\n    uiOnEscapeKey() {\n        this.uiCloseModal();\n    }\n\n    protected selectedId = null;\n    selectItemSelected(num:number) {\n        let detail = this.list[num];\n        this.selectedId = detail['_id'];\n        this.clickedId = detail['_id'];\n        this.outputData = {action: \"selected\", \n                            value: {\"_id\": detail[\"_id\"], \"value\": this.stringify(detail)},\n                            detail: detail\n                          };\n        this.done.emit(true);\n    }\n    \n    detailSelSelected() {\n        let detail = this.detail;\n        this.outputData = {action: \"selected\", \n                            value: {\"_id\": detail[\"_id\"], \"value\": this.stringify(detail)},\n                            detail: detail\n                          };\n        this.done.emit(true);\n    }\n\n    selectViewDetail(num:number) {\n        let detail = this.list[num];\n        this.clickedId = detail['_id'];\n        this.outputData = {action: \"view\", \n                            value: detail[\"_id\"]\n                          };\n        this.done.emit(true);\n    }\n    \n    detailSelBack() {\n        this.outputData = {action: \"back\", \n                            value: null\n                          };\n        this.done.emit(true);\n    }\n    \n    //Search more in the list view\n    protected searchText: string;\n    protected searchMoreDetail: any;\n    public moreSearchOpened:boolean = false;\n    toggleMoreSearch() {\n        this.moreSearchOpened = !this.moreSearchOpened;\n    }    \n    onSearchTextClear():void {\n      this.searchText = undefined;\n      if (!this.moreSearchOpened) this.searchList();\n    }\n    onSearchClear() {\n        this.searchText = undefined;\n        let detail = {};\n        this.detail = this.formatDetail(detail);\n        this.searchList();\n    }\n    \n    /* This is for editor related */\n    protected textEditors:any; //type of QueryList<T>\n    protected textEditorMap:any = {};\n    \n    protected extraFieldsUnload() {//from server\n        if (this.textEditors) {\n            this.textEditors.forEach(editor=>{\n                \n                let fieldName = editor.name;\n                let validatorObj = this.textEditorMap[fieldName];\n                if (!validatorObj) return;\n                \n                let content = this.detail[validatorObj.fieldName]\n                if (content) editor.setContent(content);\n            });\n        }\n    }\n        \n    protected extraFieldsLoad() {//to server\n        let result = true;\n        if (this.textEditors) {\n            let array = this.textEditors.toArray();\n            for (let editor of array) {\n                let fieldName = editor.name;\n                let [content,text] = editor.getContent();\n                let validatorObj = this.textEditorMap[fieldName];\n                if (!validatorObj) continue;\n                \n                let fieldState = validatorObj.fieldState;\n                fieldState.errors = {};\n                if (!content) {\n                    if (validatorObj.required) {\n                        fieldState.errors.required = true;\n                        fieldState.valid = false;\n                        result = false;\n                    }\n                    continue;\n                }\n                if ('minlength' in validatorObj && text.length < validatorObj.minlength) {\n                    fieldState.valid = false;\n                    fieldState.errors.minlength = true;\n                    result = false;\n                    continue;\n                }\n                if ('maxlength' in validatorObj && text.length > validatorObj.maxlength) {\n                    fieldState.valid = false;\n                    fieldState.errors.maxlength = true;\n                    result = false;\n                    continue;\n                }\n                if ('validators' in validatorObj) {\n                    let error = validatorObj['validators'].validateValue(text)\n                    if (error) {\n                        fieldState.valid = false;\n                        fieldState.errors = error;\n                        result = false;\n                        continue;\n                    }    \n                }\n                fieldState.valid = true;\n                fieldState.errors = undefined;\n                this.detail[validatorObj.fieldName] = content;\n            }\n        }\n        return result;\n    }\n    onEdtiorPreview(editorName:string) {\n        if (this.textEditors)\n            this.textEditors.forEach( (editor) => {\n                if (editor.name == editorName) editor.preview();\n            });\n    }\n    \n    /*Parent router related*/\n    protected getParentRouteItem():string {\n        let routeSnapshot = this.route.snapshot;\n        let parentItem;\n        do {\n              if (routeSnapshot.data && routeSnapshot.data.mraLevel == 1 ) {\n                parentItem = routeSnapshot.data.item;\n                break;\n              }\n              routeSnapshot = routeSnapshot.parent;\n        } while (routeSnapshot)\n        return parentItem;\n    }\n\n    protected getParentRouteItemId():string {\n        let routeSnapshot = this.route.snapshot;\n        let parentItemId;\n        do {\n              if (routeSnapshot.data && routeSnapshot.data.mraLevel == 1 && ('id' in routeSnapshot.params)) {\n                parentItemId = routeSnapshot.params.id;\n                break;\n              }\n              routeSnapshot = routeSnapshot.parent;\n        } while (routeSnapshot)\n        return parentItemId;\n    }\n        \n    protected getParentRouteRefField():string {\n        let mp = this.referenceFieldsMap;\n        for (let prop in mp) {\n            if (mp.hasOwnProperty(prop) && mp[prop] == this.parentItem) {\n                return prop;\n            }\n        }\n    }\n\n    protected getParentActivatedRouter():ActivatedRoute {\n        let route = this.route;\n        do {\n            let data = route.snapshot.data;\n            //all route inside the mra system will have mraLevel data item\n            if (!data.mraLevel) return route;\n            route = route.parent;\n        } while (route)\n        return this.route.root;\n    }\n    \n    /*Sub detail show flag*/\n    public toggleCheckedItem(i:number):void {\n        this.checkedItem[i] = !this.checkedItem[i];\n    }\n\n    /*** Any View - add new component in the current view*/\n    protected isAdding: boolean = false;\n    public onAdd() {\n        this.isAdding = true;\n    }\n    public toggleAdd() {\n        this.isAdding = !this.isAdding;\n    }\n    public onAddDone(result: boolean) {\n        this.isAdding = false;\n        if (result) { //add successful. Re-populate the current list\n          if (this.view == ViewType.LIST) {\n            this.populateList();\n          }\n        } else {\n            ; //do nothing\n        }\n    }\n    \n    /*Date Range Selection */\n    hoveredDate: any;\n\n    onDateSelectionToggle(fn:string) {\n        this.detail[fn]['pop'] = !this.detail[fn]['pop'];\n    }\n    \n    onDateSelection(fn:string, date: any) {\n        if (!this.detail[fn]['from'] && !this.detail[fn]['to']) {\n          this.detail[fn]['from'] = date;\n        } else if (this.detail[fn]['from'] && !this.detail[fn]['to'] && date.after(this.detail[fn]['from'])) {\n          this.detail[fn]['to'] = date;\n          this.detail[fn]['pop'] = false; //Finished. hide the selection \n        } else {\n          this.detail[fn]['to'] = null;\n          this.detail[fn]['from'] = date;\n        }\n    }\n\n    isHovered(fn:string, date: any) {\n        return this.detail[fn]['from'] && !this.detail[fn]['to'] && this.hoveredDate && date.after(this.detail[fn]['from']) && date.before(this.hoveredDate);\n    }\n\n    isInside(fn:string, date: any) {\n        return date.after(this.detail[fn]['from']) && date.before(this.detail[fn]['to']);\n    }\n\n    isRange(fn:string, date: any) {\n        return date.equals(this.detail[fn]['from']) || date.equals(this.detail[fn]['to']) || this.isInside(fn, date) || this.isHovered(fn, date);\n    }\n}\n","import { Input, Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidationErrors, AbstractControl } from '@angular/forms';\n\n@Directive({\n  selector: '[minnumber]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MinNumber, multi: true}]\n})\nexport class MinNumber implements Validator {\n  @Input('minnumber') minnumber: string;\n    \n  validate(control: AbstractControl): ValidationErrors | null {\n    let num = control.value;\n    let minnum = parseFloat(this.minnumber);\n    if (isNaN(minnum)) return null;     //only compare when max is a number\n    //only compare when inputs are numbers\n    if (typeof num == 'number' && num < minnum)\n        return { 'minnumber': \"must be no less than \" + minnum };\n    return null;\n  }\n}\n\n@Directive({\n  selector: '[maxnumber]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MaxNumber, multi: true}]\n})\nexport class MaxNumber implements Validator {\n  @Input('maxnumber') maxnumber: string;\n    \n  validate(control: AbstractControl): ValidationErrors | null {\n    let num = control.value;\n    let maxnum = parseFloat(this.maxnumber);\n    if (isNaN(maxnum)) return null;     //only compare when max is a number\n    //only compare when inputs are numbers\n    if (typeof num == 'number' && num > maxnum)\n        return { 'maxnumber': \"must be no greater than \" + maxnum };\n    return null;\n  }\n}\n\n/* This is how you can get the name of the control - from which you can mapping to the model name\n    let controls = control.parent.controls;\n    let whoami;\n    for( let prop in controls ) {\n        if( controls[ prop ] == control) {\n            whoami = prop;\n            break;\n        }\n    }\n*/\n","import { ElementRef, Renderer2, Directive, Input} from '@angular/core';\n\ndeclare var $: any;\n\nvar fullscreenCss = `\n\n.editorhide {\n    display: none;\n}\n.editorfullscreen {\n    display: block;\n    position: fixed; \n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto; \n    z-index: 1050;\n    background-color: #fff;\n}\n\n.editor-action-buttons {\n    width: 100%;\n    float:right; \n    text-align: right;\n    margin-bottom: 1.25rem;\n    margin-top: 2.5rem;\n}\n.editor-action-buttons .btn {\n    display: inline-block;\n    margin-left: 2.5rem;\n}\n\n`;\n\nvar fullscreenHtml = `\n<div class=\"editorfullscreen\" id=\"mraeditorfullscreenDiv\">\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"editor-action-buttons\">\n            <button id=\"mraeditorfullscreenClose\" class=\"btn btn-outline-success\">Close</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col\">\n        <div class=\"card\">\n            <div class=\"card-body\" id=\"mrafullscreenHtml\"></div>\n        </div>\n    </div>\n  </div>\n</div>\n\n</div>\n`;\n\n\nvar summerNoteConfig = {\n          minHeight: 200,\n          focus: false,\n          airMode: false,\n          //fontNames: ['Roboto', 'Calibri', 'Times New Roman', 'Arial'],\n          //fontNamesIgnoreCheck: ['Roboto', 'Calibri'],\n          dialogsInBody: true,\n          dialogsFade: true,\n          disableDragAndDrop: false,\n          toolbar: [\n            // [groupName, [list of button]]\n            ['font', ['style', 'fontname','fontsize', 'color']],\n            ['style', ['bold', 'italic', 'underline']],//, 'strikethrough'\n            //['font', [ 'superscript', 'subscript','clear']],\n             ['paragraph', ['ul', 'ol', 'paragraph']],//, 'height'\n             ['insert', ['table', 'picture', 'link', 'video']],//, 'hr'\n            //['misc', ['undo', 'redo', 'print', 'help', 'fullscreen']]\n            ['misc', ['undo', 'redo', 'fullscreen']]\n          ],\n//          popover: {\n//            air: [\n//              ['color', ['color']],\n//              ['font', ['bold', 'underline', 'clear']]\n//            ]\n//          }\n        }\n\n@Directive({\n    selector: '[mra-richtext-select]',\n})\nexport class MraRichTextSelectDirective {\n    @Input('mra-richtext-select') name: string;\n\n    content:string;\n    private id;\n    \n    constructor(private el: ElementRef, private render: Renderer2) {\n        this.id = Date.now();\n\n        //<!-- Create the editor container -->\n        let html = `\n            <div id=\"richtext` + this.id +`\">\n            </div>\n            <div id=\"fullscreen` + this.id +`\"></div>'\n            `; \n\n        if (!$('#mraeditorfullscreenCss').length) {\n            $(\"<style type='text/css' id='mraeditorfullscreenCss'>\" + fullscreenCss + \"</style>\").appendTo(\"head\"); \n        }\n\n\n        this.render.setProperty(this.el.nativeElement, 'innerHTML', html);\n        \n        \n        setTimeout(()=> {\n            if (this.content) $(\"#richtext\"+this.id).html(this.content);\n            $(\"#richtext\"+this.id).summernote(summerNoteConfig);\n        }, 1);\n    }\n    \n    setContent(content:string) {\n        this.content = content;\n        if (this.content) {\n            $(\"#richtext\"+this.id).each(function( index ) {\n              $(this).summernote('destroy');\n            });            \n            $(\"#richtext\"+this.id).html(this.content);\n            $(\"#richtext\"+this.id).summernote(summerNoteConfig);\n        }\n    }\n    \n    getContent():string[] {\n        let html = $(\"#richtext\"+this.id).summernote('code');\n        let text = $(\"<div>\"+html+\"</div>\").text();\n        return [html, text];\n    }\n    preview() {\n        \n        if (!$('#mraeditorfullscreenDiv').length) {\n            $(\"#fullscreen\"+this.id).append(fullscreenHtml); \n        }\n\n        $(\"#mraeditorfullscreenClose\" ).click(function() {\n            $('#mraeditorfullscreenDiv').remove();\n        });\n\n        let [html, text] = this.getContent();\n        $(\"#mrafullscreenHtml\").html(html);\n    }\n}\n\n@Directive({\n    selector: '[mra-richtext-show]',\n})\nexport class MraRichTextShowDirective {\n    @Input('mra-richtext-show') name: string;\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n    \n    setContent(content:string) {\n        let id = Date.now();\n        var displayHtml = `\n            <div class=\"card\">\n                <div class=\"card-body\" id=\"mraeditordisplay` + id +`\"></div>\n            </div>\n        `;\n\n        this.render.setProperty(this.el.nativeElement, 'innerHTML', displayHtml);\n        $(\"#mraeditordisplay\" + id).html(content);\n    }\n    \n}\n","import { NgModule } from '@angular/core';\n\nimport { MinNumber, MaxNumber } from './common.directives';\nimport { MraRichTextSelectDirective, MraRichTextShowDirective } from './summernote.directive';\nimport { MraCommonService } from './common.service';\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    MinNumber,\n    MaxNumber,\n    MraRichTextSelectDirective,\n    MraRichTextShowDirective\n  ],\n  exports: [\n    MinNumber,\n    MaxNumber,\n    MraRichTextSelectDirective,\n    MraRichTextShowDirective\n ],\n  providers: [\n    MraCommonService\n  ],\n})\nexport class MraModule { }","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router'\n\nconst COMPONENT_CACHE_DURATION = 30 * 1000;\nexport class MraRouteReuseStrategy implements RouteReuseStrategy {\n\n    detachedRouteHandles: { [key: string]: any[] } = {}; //key is url, and value is at [handle, timestamp] format\n    pageYOffset = {};\n    editItems = {};\n    isAuth = false;\n\n    /* Start: The following should use the authService. But let's decouple dependency now */\n    private isAuthorized(): boolean {\n        //Refer to AuthenticationService for this function.\n        const authRecord = JSON.parse(localStorage.getItem('mdds-auth-record'));\n        if (authRecord && authRecord.accessToken ) {return true;}\n        return false;\n    }\n    private getLogoutTime(): number {\n        const authRecord = JSON.parse(localStorage.getItem('mdds-auth-record'));\n        if (authRecord) { \n            return authRecord.logoutTs;\n        }\n        return 0;\n    }\n    /* End */\n\n    private isLogoutReload(): boolean {\n        if (this.isAuthorized()) { \n            return false;\n        }\n        const currentTs = Date.now();\n        const logoutTs = this.getLogoutTime();\n        if (currentTs - logoutTs < 1000) { \n            return true;\n        }\n        return false;\n    }\n\n    private checkAuthentication() {\n        const auth = this.isAuth;\n        this.isAuth = this.isAuthorized();\n        if (this.isAuth != auth) { \n            // authentication status changed. Not attach;\n            this.detachedRouteHandles = {}; // empty the map\n        }\n    }\n\n    /** Determines if this route (and its subtree) should be detached to be reused later */\n    public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n        if (route.routeConfig && route.routeConfig.path === 'list') {\n            //save current scroll position\n            let key = route['_routerState'].url;\n            this.pageYOffset[key] = window.pageYOffset;\n        }\n        return route.routeConfig.path === 'list';\n    }\n\n    /** Stores the detached route */\n    public store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n        const date = new Date();\n        const key = route['_routerState'].url;\n        if (!handle) return;\n        this.detachedRouteHandles[key] = [handle, date.getTime()]\n    }\n\n    /** Determines if this route (and its subtree) should be reattached */\n    public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n        this.checkAuthentication();\n        let date = new Date();\n        let key = route['_routerState'].url;\n        if (route.routeConfig && (route.routeConfig.path === 'new' || route.routeConfig.path === 'edit/:id')) {\n            if (route.data && route.data.item) { \n                this.editItems[route.data.item] = true;\n            }\n        }\n        if (!route.routeConfig || route.routeConfig.path !== 'list') {  return false; }\n        if (!this.detachedRouteHandles[key]) { return false; }\n        if (date.getTime() - this.detachedRouteHandles[key][1]  > COMPONENT_CACHE_DURATION)  return false;\n        return true;\n    }\n\n    /** Retrieves the previously stored route */\n    public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n        let date = new Date();\n        let key = route['_routerState'].url;\n        if (!route.routeConfig || route.routeConfig.path !== 'list') return null;\n        if (route.data.item && (route.data.item in this.editItems)) {\n            delete this.editItems[route.data.item];\n            delete this.detachedRouteHandles[key];\n            return null;\n        }\n        if (!this.detachedRouteHandles[key]) return null;\n        if (date.getTime() - this.detachedRouteHandles[key][1]  > COMPONENT_CACHE_DURATION) return null;\n        \n        let yOffset = this.pageYOffset[key];\n        setTimeout(function () {\n                console.log(\"==retrieve: \", key, yOffset);\n                window.scrollTo(0, yOffset);\n            }, 20); //scroll to saved position\n        \n        return this.detachedRouteHandles[key][0];\n    }\n\n    /** Determines if a route should be reused */\n    public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n        // Below is the default implementation;\n        if (this.isLogoutReload()) {\n            return false; // authentication status changed. Don't reuse.\n        }\n        return future.routeConfig === curr.routeConfig\n    }\n}\n","export var dateStructureToString = function(date: any, fmt:string):string {\n    let d, M, yyyy, h, m, s;\n    let value;\n    if (!date) return \"\"; //undefined\n    \n    d = date.day;\n    M = date.month; \n    yyyy = date.year;\n    if (typeof d !== 'number' || typeof M !== 'number'  || typeof yyyy !== 'number' ) return \"\"; //undefined\n    \n    let yy = yyyy.toString().slice(2);    \n    let dd= d<10? '0'+d: d.toString();\n    let MM= M<10? '0'+M: M.toString();\n    \n    value = fmt.replace(/yyyy/ig, yyyy.toString()).\n                   replace(/yy/ig, yy.toString()).\n                   replace(/MM/g, MM.toString()).\n                   replace(/dd/ig, dd.toString());\n    return value;\n}\n\nexport var stringToDateStructure = function(value: string, fmt:string):any {\n    let date;    \n    let result = [];\n    if (value.length != fmt.length) return date; //not ready\n    let regexes = [{re:/yyyy/i, len: 4}, {re: /yy/i, len: 2}, {re:/MM/, len: 2}, {re: /dd/i, len: 2}];\n    for (let reg of regexes) {\n        let p = fmt.search(reg.re); //find position in format\n        let v;\n        if (p != -1) v = parseInt(value.slice(p, p+reg.len));\n        else v = NaN\n        result.push(v);\n    }\n    let [yyyy, yy, M, d] = result;\n    if ( (isNaN(yyyy) && isNaN(yy) ) || isNaN(M) || isNaN(d) ) return date; //undefined\n    return {day:d, month: M, year: yyyy?yyyy:2000+yy };\n\n}\n"]}