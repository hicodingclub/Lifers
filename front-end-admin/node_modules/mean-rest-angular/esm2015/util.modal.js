/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var modalHtml = `
<div class="meanExpressAngularModal" id="meanExpressAngularModal">
  <div class="meanExpressAngularModal-content">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="meanExpressAngularModalTitle">Modal title from function</h5>
        <button type="button" class="close" id="meanExpressAngularModalClose" aria-label="Close" >
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="meanExpressAngularModalBody">
        Hello
      </div>
      <div class="modal-footer" id="meanExpressAngularModalFooter">
      </div>
    </div>
  </div>
</div> 
`;
/** @type {?} */
var modalCss = `
.meanExpressAngularModal {
    display: none; 
    position: fixed; 
    z-index: 100; 
    padding-top: 100px; 
    left: 0;
    top: 0;
    width: 100%;
    height: 100%; 
    overflow: auto; 
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0,0.4);
}

.meanExpressAngularModal.show {
    display: block; 
}

.meanExpressAngularModal-content {
    position: relative;
    background-color: #fefefe;
    margin: auto;
    padding: 0;
    border: 1px solid #888;
    width: 50%;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
    -webkit-animation-name: modalanimatetop;
    -webkit-animation-duration: 0.4s;
    animation-name: modalanimatetop;
    animation-duration: 0.4s
}

@-webkit-keyframes modalanimatetop {
    from {top:-300px; opacity:0} 
    to {top:0; opacity:1}
}

@keyframes modalanimatetop {
    from {top:-300px; opacity:0}
    to {top:0; opacity:1}
}
`;
export class ModalConfig {
}
if (false) {
    /** @type {?} */
    ModalConfig.prototype.title;
    /** @type {?} */
    ModalConfig.prototype.content;
    /** @type {?} */
    ModalConfig.prototype.buttons;
    /** @type {?} */
    ModalConfig.prototype.returns;
    /** @type {?} */
    ModalConfig.prototype.callBack;
}
export class Modal {
    /**
     * @param {?} config
     */
    constructor(config) {
        this.config = config;
    }
    /**
     * @return {?}
     */
    show() {
        /** @type {?} */
        var config = this.config;
        if (!$('#meanExpressAngularModal').length) {
            $("<style type='text/css' id='meanExpressAngularModalCss'>" + modalCss + "</style>").appendTo("head");
            $('body').append(modalHtml);
        }
        $("#meanExpressAngularModalFooter").empty();
        for (var i = 0; i < config.buttons.length; i++) {
            /** @type {?} */
            var text = config.buttons[i];
            /** @type {?} */
            var button = '<button type="button" class="btn btn-primary" id="meanExpressAngularModalBtn' + i + '" >' + text + '</button>';
            $("#meanExpressAngularModalFooter").append(button);
            $("#meanExpressAngularModalBtn" + i).click(function (event) {
                $('#meanExpressAngularModal').removeClass("show");
                /** @type {?} */
                var index = parseInt(event.target.id.replace("meanExpressAngularModalBtn", ""));
                config.callBack(config.returns[index]);
            });
        }
        $("#meanExpressAngularModalTitle").empty();
        $("#meanExpressAngularModalTitle").append(config.title);
        $("#meanExpressAngularModalBody").empty();
        $("#meanExpressAngularModalBody").append(config.content);
        $("#meanExpressAngularModalClose").click(function () {
            $('#meanExpressAngularModal').removeClass("show");
            config.callBack(false);
        });
        $('#meanExpressAngularModal').addClass("show");
    }
    /**
     * @return {?}
     */
    hide() {
        $('#meanExpressAngularModal').removeClass("show");
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    Modal.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5tb2RhbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21lYW4tcmVzdC1hbmd1bGFyLyIsInNvdXJjZXMiOlsidXRpbC5tb2RhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztJQUFJLFNBQVMsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBa0JmOztJQUVHLFFBQVEsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBMENkO0FBSUQsTUFBTSxPQUFPLFdBQVc7Q0FRdkI7OztJQVBHLDRCQUFjOztJQUNkLDhCQUFnQjs7SUFFaEIsOEJBQWtCOztJQUVsQiw4QkFBbUI7O0lBQ25CLCtCQUEyQjs7QUFHL0IsTUFBTSxPQUFPLEtBQUs7Ozs7SUFDZCxZQUFvQixNQUFtQjtRQUFuQixXQUFNLEdBQU4sTUFBTSxDQUFhO0lBQUksQ0FBQzs7OztJQUVyQyxJQUFJOztZQUNILE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTTtRQUN4QixJQUFJLENBQUMsQ0FBQyxDQUFDLDBCQUEwQixDQUFDLENBQUMsTUFBTSxFQUFFO1lBQ3ZDLENBQUMsQ0FBQyx5REFBeUQsR0FBRyxRQUFRLEdBQUcsVUFBVSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3RHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDL0I7UUFFRCxDQUFDLENBQUUsZ0NBQWdDLENBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM5QyxLQUFLLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7O2dCQUNyQyxJQUFJLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7O2dCQUN4QixNQUFNLEdBQUcsOEVBQThFLEdBQUcsQ0FBQyxHQUFHLEtBQUssR0FBRyxJQUFJLEdBQUcsV0FBVztZQUM1SCxDQUFDLENBQUUsZ0NBQWdDLENBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFckQsQ0FBQyxDQUFFLDZCQUE2QixHQUFDLENBQUMsQ0FBRSxDQUFDLEtBQUssQ0FBQyxVQUFTLEtBQUs7Z0JBQ3JELENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQzs7b0JBQzlDLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLDRCQUE0QixFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUMvRSxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUMzQyxDQUFDLENBQUMsQ0FBQztTQUNOO1FBRUQsQ0FBQyxDQUFFLCtCQUErQixDQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDN0MsQ0FBQyxDQUFFLCtCQUErQixDQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxRCxDQUFDLENBQUUsOEJBQThCLENBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM1QyxDQUFDLENBQUUsOEJBQThCLENBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTNELENBQUMsQ0FBRSwrQkFBK0IsQ0FBRSxDQUFDLEtBQUssQ0FBQztZQUN2QyxDQUFDLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDbEQsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQztRQUVILENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuRCxDQUFDOzs7O0lBRU0sSUFBSTtRQUNQLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0RCxDQUFDO0NBQ0o7Ozs7OztJQXRDZSx1QkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9kYWxIdG1sID0gYFxuPGRpdiBjbGFzcz1cIm1lYW5FeHByZXNzQW5ndWxhck1vZGFsXCIgaWQ9XCJtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbFwiPlxuICA8ZGl2IGNsYXNzPVwibWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwtY29udGVudFwiPlxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgIDxoNSBjbGFzcz1cIm1vZGFsLXRpdGxlXCIgaWQ9XCJtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbFRpdGxlXCI+TW9kYWwgdGl0bGUgZnJvbSBmdW5jdGlvbjwvaDU+XG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiY2xvc2VcIiBpZD1cIm1lYW5FeHByZXNzQW5ndWxhck1vZGFsQ2xvc2VcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIiA+XG4gICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnRpbWVzOzwvc3Bhbj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5XCIgaWQ9XCJtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbEJvZHlcIj5cbiAgICAgICAgSGVsbG9cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWZvb3RlclwiIGlkPVwibWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxGb290ZXJcIj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PiBcbmA7XG5cbnZhciBtb2RhbENzcyA9IGBcbi5tZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbCB7XG4gICAgZGlzcGxheTogbm9uZTsgXG4gICAgcG9zaXRpb246IGZpeGVkOyBcbiAgICB6LWluZGV4OiAxMDA7IFxuICAgIHBhZGRpbmctdG9wOiAxMDBweDsgXG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyBcbiAgICBvdmVyZmxvdzogYXV0bzsgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsMCwwKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNCk7XG59XG5cbi5tZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbC5zaG93IHtcbiAgICBkaXNwbGF5OiBibG9jazsgXG59XG5cbi5tZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbC1jb250ZW50IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xuICAgIHdpZHRoOiA1MCU7XG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpLDAgNnB4IDIwcHggMCByZ2JhKDAsMCwwLDAuMTkpO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IG1vZGFsYW5pbWF0ZXRvcDtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC40cztcbiAgICBhbmltYXRpb24tbmFtZTogbW9kYWxhbmltYXRldG9wO1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC40c1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgbW9kYWxhbmltYXRldG9wIHtcbiAgICBmcm9tIHt0b3A6LTMwMHB4OyBvcGFjaXR5OjB9IFxuICAgIHRvIHt0b3A6MDsgb3BhY2l0eToxfVxufVxuXG5Aa2V5ZnJhbWVzIG1vZGFsYW5pbWF0ZXRvcCB7XG4gICAgZnJvbSB7dG9wOi0zMDBweDsgb3BhY2l0eTowfVxuICAgIHRvIHt0b3A6MDsgb3BhY2l0eToxfVxufVxuYDtcblxuZGVjbGFyZSB2YXIgJDogYW55O1xuXG5leHBvcnQgY2xhc3MgTW9kYWxDb25maWcge1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgY29udGVudDogc3RyaW5nO1xuICAgIC8vbGlzdCBvZiBidXR0b24gdGV4dFxuICAgIGJ1dHRvbnM6IHN0cmluZ1tdO1xuICAgIC8vbGlzdCBvZiBidXR0b24gcmV0dXJucyB3aGVuIGNsaWNrZWRcbiAgICByZXR1cm5zOiBib29sZWFuW107XG4gICAgY2FsbEJhY2s6IChyZXN1bHQpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBjbGFzcyBNb2RhbCB7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBjb25maWc6IE1vZGFsQ29uZmlnICkge31cblxuICAgIHB1YmxpYyBzaG93KCkge1xuICAgICAgICB2YXIgY29uZmlnID0gdGhpcy5jb25maWc7XG4gICAgICAgIGlmICghJCgnI21lYW5FeHByZXNzQW5ndWxhck1vZGFsJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAkKFwiPHN0eWxlIHR5cGU9J3RleHQvY3NzJyBpZD0nbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxDc3MnPlwiICsgbW9kYWxDc3MgKyBcIjwvc3R5bGU+XCIpLmFwcGVuZFRvKFwiaGVhZFwiKTsgXG4gICAgICAgICAgICAkKCdib2R5JykuYXBwZW5kKG1vZGFsSHRtbCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICQoIFwiI21lYW5FeHByZXNzQW5ndWxhck1vZGFsRm9vdGVyXCIgKS5lbXB0eSgpO1xuICAgICAgICBmb3IgKHZhciBpPTA7IGk8IGNvbmZpZy5idXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgdGV4dCA9IGNvbmZpZy5idXR0b25zW2ldO1xuICAgICAgICAgICAgdmFyIGJ1dHRvbiA9ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGlkPVwibWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxCdG4nICsgaSArICdcIiA+JyArIHRleHQgKyAnPC9idXR0b24+JztcbiAgICAgICAgICAgICQoIFwiI21lYW5FeHByZXNzQW5ndWxhck1vZGFsRm9vdGVyXCIgKS5hcHBlbmQoYnV0dG9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJCggXCIjbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWxCdG5cIitpICkuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAkKCcjbWVhbkV4cHJlc3NBbmd1bGFyTW9kYWwnKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XG4gICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gcGFyc2VJbnQoZXZlbnQudGFyZ2V0LmlkLnJlcGxhY2UoXCJtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbEJ0blwiLCBcIlwiKSk7XG4gICAgICAgICAgICAgICAgY29uZmlnLmNhbGxCYWNrKGNvbmZpZy5yZXR1cm5zW2luZGV4XSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgICQoIFwiI21lYW5FeHByZXNzQW5ndWxhck1vZGFsVGl0bGVcIiApLmVtcHR5KCk7XG4gICAgICAgICQoIFwiI21lYW5FeHByZXNzQW5ndWxhck1vZGFsVGl0bGVcIiApLmFwcGVuZChjb25maWcudGl0bGUpO1xuICAgICAgICAkKCBcIiNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbEJvZHlcIiApLmVtcHR5KCk7XG4gICAgICAgICQoIFwiI21lYW5FeHByZXNzQW5ndWxhck1vZGFsQm9keVwiICkuYXBwZW5kKGNvbmZpZy5jb250ZW50KTtcblxuICAgICAgICAkKCBcIiNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbENsb3NlXCIgKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJyNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbCcpLnJlbW92ZUNsYXNzKFwic2hvd1wiKTtcbiAgICAgICAgICAgIGNvbmZpZy5jYWxsQmFjayhmYWxzZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoJyNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbCcpLmFkZENsYXNzKFwic2hvd1wiKTtcbiAgICB9XG4gICAgXG4gICAgcHVibGljIGhpZGUoKSB7XG4gICAgICAgICQoJyNtZWFuRXhwcmVzc0FuZ3VsYXJNb2RhbCcpLnJlbW92ZUNsYXNzKFwic2hvd1wiKTtcbiAgICB9XG59XG4iXX0=