/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject } from '@angular/core';
import { Router } from '@angular/router';
import { AuthenticationService } from '../auth.service';
import { AUTHTICATION_LOGIN_PAGE_URI } from '../tokens';
export class AuthIconComponent {
    /**
     * @param {?} router
     * @param {?} authService
     * @param {?} loginPageUri
     */
    constructor(router, authService, loginPageUri) {
        this.router = router;
        this.authService = authService;
        this.loginPageUri = loginPageUri;
        this.popup = false;
        this.popupStyle = {};
        this.userName = 'Please login';
        this.userNameShort = 'Please login';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.isAuthorized();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    toggle(event) {
        if (!this.popup) {
            /** @type {?} */
            const right = (window.innerWidth - event.x) - 2;
            /** @type {?} */
            const top = event.y + 15;
            this.popupStyle = {
                'right': right.toString() + 'px',
                'top': top.toString() + 'px',
            };
        }
        this.popup = !this.popup;
    }
    /**
     * @return {?}
     */
    closePopup() {
        this.popup = false;
    }
    /**
     * @return {?}
     */
    isAuthorized() {
        /** @type {?} */
        const name = this.authService.getUserName();
        /** @type {?} */
        const isAuth = this.authService.isAuthorized();
        if (name) {
            this.userName = name;
            if (isAuth) {
                if (name.length > 12) {
                    this.userNameShort = name.substring(0, 10) + '...';
                }
                else {
                    this.userNameShort = name.substring(0, 13);
                }
            }
            else {
                this.userNameShort = 'Please login';
            }
        }
        return isAuth;
    }
    /**
     * @return {?}
     */
    login() {
        // not logged in so redirect to login page with the return url
        /** @type {?} */
        const state = this.router.routerState.snapshot;
        this.authService.setInterruptedUrl(state.url);
        this.popup = false;
        this.router.navigate([this.loginPageUri]);
    }
    /**
     * @return {?}
     */
    logout() {
        // not logged in so redirect to login page with the return url
        this.authService.logout();
        this.popup = false;
        this.router.navigated = false; // refresh current page;
        this.router.navigate(['/']); // home page
    }
}
AuthIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-auth-icon',
                template: "<div class='auth-icon-container' (clickElsewhere)=\"closePopup()\">\n\n\t<div class=\"auth-icon\" [ngClass]=\"{'auth-icon-active': isAuthorized()}\" (click)=\"toggle($event)\">\n\t\t<span class=\"icon-text\"><i class=\"fas fa-user\"></i></span>\n\t</div>\n\n    <div>{{userNameShort}}</div>\n\n\t<div *ngIf=\"popup\" class=\"auth-icon-pop\" [ngStyle]=\"popupStyle\">\n\t  <div class=\"dropdown-menu pop-menu-container\">\n\t  \t<label class=\"login-name\">{{userName}}</label>\n\t  \n\t  \t<div class=\"dropdown-divider\"></div>\n\t    <ng-container *ngIf=\"isAuthorized(); else notAuthorized\">\n\t\t    <a class=\"dropdown-item\" href=\"#\">Profile</a>\n\t\t    \n\t\t    <div class=\"dropdown-divider\"></div>\n\t\t    \n\t\t    <a class=\"dropdown-item btn\" (click)=\"logout()\">Logout</a>\n\t\t</ng-container>\n\t    <ng-template #notAuthorized>\t\t    \n\t\t    <a class=\"dropdown-item btn\" (click)=\"login()\">Login</a>\n\t\t</ng-template>\n\t  </div>\n    </div>\n</div>",
                styles: [".auth-icon{margin-left:auto;margin-right:auto;background-color:#aaa;height:2.5rem;width:2.5rem;border-radius:50%;text-align:center;cursor:pointer}.auth-icon-active{background-color:#5aa046}.icon-text{font-size:1.5rem;margin-top:.5rem}.auth-icon:hover{background-color:#c8c8c8}.auth-icon-active:hover{background-color:#78aa6e}.auth-icon-pop{position:absolute;z-index:10}.pop-menu-container{position:relative;display:block}.login-name{width:100%;font-style:italic;text-align:center}"]
            }] }
];
/** @nocollapse */
AuthIconComponent.ctorParameters = () => [
    { type: Router },
    { type: AuthenticationService },
    { type: String, decorators: [{ type: Inject, args: [AUTHTICATION_LOGIN_PAGE_URI,] }] }
];
if (false) {
    /** @type {?} */
    AuthIconComponent.prototype.popup;
    /** @type {?} */
    AuthIconComponent.prototype.popupStyle;
    /** @type {?} */
    AuthIconComponent.prototype.userName;
    /** @type {?} */
    AuthIconComponent.prototype.userNameShort;
    /**
     * @type {?}
     * @private
     */
    AuthIconComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    AuthIconComponent.prototype.authService;
    /**
     * @type {?}
     * @private
     */
    AuthIconComponent.prototype.loginPageUri;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21kZHMtYW5ndWxhci1hdXRoLyIsInNvdXJjZXMiOlsiYXV0aC9hdXRoLWljb24vYXV0aC1pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUcsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFFLE1BQU0sRUFBK0MsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV4RCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFPeEQsTUFBTSxPQUFPLGlCQUFpQjs7Ozs7O0lBTTVCLFlBQ1UsTUFBYyxFQUNkLFdBQWtDLEVBQ0csWUFBb0I7UUFGekQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGdCQUFXLEdBQVgsV0FBVyxDQUF1QjtRQUNHLGlCQUFZLEdBQVosWUFBWSxDQUFRO1FBUjVELFVBQUssR0FBRyxLQUFLLENBQUM7UUFDZCxlQUFVLEdBQVEsRUFBRSxDQUFDO1FBQ3JCLGFBQVEsR0FBRyxjQUFjLENBQUM7UUFDMUIsa0JBQWEsR0FBRyxjQUFjLENBQUM7SUFLaUMsQ0FBQzs7OztJQUV4RSxRQUFRO1FBQ04sSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRU0sTUFBTSxDQUFDLEtBQUs7UUFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7O2tCQUNULEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7O2tCQUN6QyxHQUFHLEdBQUcsS0FBSyxDQUFDLENBQUMsR0FBRyxFQUFFO1lBRXhCLElBQUksQ0FBQyxVQUFVLEdBQUc7Z0JBQ2hCLE9BQU8sRUFBRSxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsSUFBSTtnQkFDaEMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxRQUFRLEVBQUUsR0FBRyxJQUFJO2FBQzdCLENBQUM7U0FDSDtRQUNELElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQzNCLENBQUM7Ozs7SUFFTSxVQUFVO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQzs7OztJQUVNLFlBQVk7O2NBQ1gsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFOztjQUNyQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUU7UUFDOUMsSUFBSSxJQUFJLEVBQUU7WUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUNyQixJQUFJLE1BQU0sRUFBRTtnQkFDVixJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxFQUFFO29CQUNwQixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQztpQkFDcEQ7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztpQkFDNUM7YUFDRjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsYUFBYSxHQUFHLGNBQWMsQ0FBQzthQUNyQztTQUNKO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7OztJQUVNLEtBQUs7OztjQUVKLEtBQUssR0FBd0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsUUFBUTtRQUNuRSxJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Ozs7SUFFTSxNQUFNO1FBQ1gsOERBQThEO1FBQzlELElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLENBQUMsd0JBQXdCO1FBQ3ZELElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVk7SUFDM0MsQ0FBQzs7O1lBckVGLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsaStCQUF1Qzs7YUFFMUM7Ozs7WUFUUSxNQUFNO1lBQ04scUJBQXFCO3lDQWtCekIsTUFBTSxTQUFDLDJCQUEyQjs7OztJQVJyQyxrQ0FBcUI7O0lBQ3JCLHVDQUE0Qjs7SUFDNUIscUNBQWlDOztJQUNqQywwQ0FBc0M7Ozs7O0lBR3BDLG1DQUFzQjs7Ozs7SUFDdEIsd0NBQTBDOzs7OztJQUMxQyx5Q0FBaUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5qZWN0ICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyLCBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBSb3V0ZXJTdGF0ZVNuYXBzaG90IH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uU2VydmljZSB9IGZyb20gJy4uL2F1dGguc2VydmljZSc7XG5cbmltcG9ydCB7IEFVVEhUSUNBVElPTl9MT0dJTl9QQUdFX1VSSSB9IGZyb20gJy4uL3Rva2Vucyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYXBwLWF1dGgtaWNvbicsXG4gICAgdGVtcGxhdGVVcmw6ICdhdXRoLWljb24uY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWydhdXRoLWljb24uY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIEF1dGhJY29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgcHVibGljIHBvcHVwID0gZmFsc2U7XG4gIHB1YmxpYyBwb3B1cFN0eWxlOiBhbnkgPSB7fTtcbiAgcHVibGljIHVzZXJOYW1lID0gJ1BsZWFzZSBsb2dpbic7XG4gIHB1YmxpYyB1c2VyTmFtZVNob3J0ID0gJ1BsZWFzZSBsb2dpbic7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcbiAgICBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoZW50aWNhdGlvblNlcnZpY2UsXG4gICAgQEluamVjdChBVVRIVElDQVRJT05fTE9HSU5fUEFHRV9VUkkpIHByaXZhdGUgbG9naW5QYWdlVXJpOiBzdHJpbmcpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaXNBdXRob3JpemVkKCk7XG4gIH1cblxuICBwdWJsaWMgdG9nZ2xlKGV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLnBvcHVwKSB7XG4gICAgICBjb25zdCByaWdodCA9ICh3aW5kb3cuaW5uZXJXaWR0aCAtIGV2ZW50LngpIC0gMjtcbiAgICAgIGNvbnN0IHRvcCA9IGV2ZW50LnkgKyAxNTtcblxuICAgICAgdGhpcy5wb3B1cFN0eWxlID0ge1xuICAgICAgICAncmlnaHQnOiByaWdodC50b1N0cmluZygpICsgJ3B4JyxcbiAgICAgICAgJ3RvcCc6IHRvcC50b1N0cmluZygpICsgJ3B4JyxcbiAgICAgIH07XG4gICAgfVxuICAgIHRoaXMucG9wdXAgPSAhdGhpcy5wb3B1cDtcbiAgfVxuXG4gIHB1YmxpYyBjbG9zZVBvcHVwKCkge1xuICAgIHRoaXMucG9wdXAgPSBmYWxzZTtcbiAgfVxuXG4gIHB1YmxpYyBpc0F1dGhvcml6ZWQoKSB7XG4gICAgY29uc3QgbmFtZSA9IHRoaXMuYXV0aFNlcnZpY2UuZ2V0VXNlck5hbWUoKTtcbiAgICBjb25zdCBpc0F1dGggPSB0aGlzLmF1dGhTZXJ2aWNlLmlzQXV0aG9yaXplZCgpO1xuICAgIGlmIChuYW1lKSB7XG4gICAgICAgIHRoaXMudXNlck5hbWUgPSBuYW1lO1xuICAgICAgICBpZiAoaXNBdXRoKSB7XG4gICAgICAgICAgaWYgKG5hbWUubGVuZ3RoID4gMTIpIHtcbiAgICAgICAgICAgIHRoaXMudXNlck5hbWVTaG9ydCA9IG5hbWUuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnVzZXJOYW1lU2hvcnQgPSBuYW1lLnN1YnN0cmluZygwLCAxMyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudXNlck5hbWVTaG9ydCA9ICdQbGVhc2UgbG9naW4nO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpc0F1dGg7XG4gIH1cblxuICBwdWJsaWMgbG9naW4oKSB7XG4gICAgLy8gbm90IGxvZ2dlZCBpbiBzbyByZWRpcmVjdCB0byBsb2dpbiBwYWdlIHdpdGggdGhlIHJldHVybiB1cmxcbiAgICBjb25zdCBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCA9IHRoaXMucm91dGVyLnJvdXRlclN0YXRlLnNuYXBzaG90O1xuICAgIHRoaXMuYXV0aFNlcnZpY2Uuc2V0SW50ZXJydXB0ZWRVcmwoc3RhdGUudXJsKTtcbiAgICB0aGlzLnBvcHVwID0gZmFsc2U7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW3RoaXMubG9naW5QYWdlVXJpXSk7XG4gIH1cblxuICBwdWJsaWMgbG9nb3V0KCkge1xuICAgIC8vIG5vdCBsb2dnZWQgaW4gc28gcmVkaXJlY3QgdG8gbG9naW4gcGFnZSB3aXRoIHRoZSByZXR1cm4gdXJsXG4gICAgdGhpcy5hdXRoU2VydmljZS5sb2dvdXQoKTtcbiAgICB0aGlzLnBvcHVwID0gZmFsc2U7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVkID0gZmFsc2U7IC8vIHJlZnJlc2ggY3VycmVudCBwYWdlO1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFsnLyddKTsgLy8gaG9tZSBwYWdlXG4gIH1cbn1cbiJdfQ==