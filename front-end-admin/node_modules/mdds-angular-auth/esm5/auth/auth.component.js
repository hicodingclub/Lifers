/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject } from '@angular/core';
import { AuthenticationService } from './auth.service';
import { AUTHTICATION_INTERFACES } from './tokens';
var AuthenticationComponent = /** @class */ (function () {
    function AuthenticationComponent(authenticationService, authenticationInterfaces) {
        this.authenticationService = authenticationService;
        this.authenticationInterfaces = authenticationInterfaces;
        this.adminInterface = false;
        this.userIntEnabled = false;
        this.adminIntEnabled = false;
        /** @type {?} */
        var str = authenticationInterfaces.toLowerCase();
        if (str.includes("user") && str.includes("admin")) { //both interface. Check cached.
            this.adminInterface = authenticationService.isAdminInterface();
            this.userIntEnabled = true;
            this.adminIntEnabled = true;
        }
        else if (str.includes("admin")) { //administrator only
            this.authenticationService.setAdminInterface(true);
            this.adminIntEnabled = true;
        }
        else { //users only
            this.authenticationService.setAdminInterface(false);
            this.userIntEnabled = true;
        }
    }
    /**
     * @param {?} adminInterface
     * @return {?}
     */
    AuthenticationComponent.prototype.setAdminInterface = /**
     * @param {?} adminInterface
     * @return {?}
     */
    function (adminInterface) {
        this.adminInterface = adminInterface;
        this.authenticationService.setAdminInterface(this.adminInterface);
    };
    AuthenticationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-auth',
                    template: "<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-6 offset-md-3\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    AuthenticationComponent.ctorParameters = function () { return [
        { type: AuthenticationService },
        { type: String, decorators: [{ type: Inject, args: [AUTHTICATION_INTERFACES,] }] }
    ]; };
    return AuthenticationComponent;
}());
export { AuthenticationComponent };
if (false) {
    /** @type {?} */
    AuthenticationComponent.prototype.adminInterface;
    /** @type {?} */
    AuthenticationComponent.prototype.userIntEnabled;
    /** @type {?} */
    AuthenticationComponent.prototype.adminIntEnabled;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.authenticationService;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.authenticationInterfaces;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tZGRzLWFuZ3VsYXItYXV0aC8iLCJzb3VyY2VzIjpbImF1dGgvYXV0aC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVuRDtJQVVJLGlDQUNZLHFCQUE0QyxFQUNYLHdCQUFnQztRQURqRSwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBQ1gsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUFRO1FBTjdFLG1CQUFjLEdBQVksS0FBSyxDQUFDO1FBQ2hDLG1CQUFjLEdBQVksS0FBSyxDQUFDO1FBQ2hDLG9CQUFlLEdBQVksS0FBSyxDQUFDOztZQU8zQixHQUFHLEdBQUcsd0JBQXdCLENBQUMsV0FBVyxFQUFFO1FBQ2hELElBQUksR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFHLEVBQUMsK0JBQStCO1lBQ2xGLElBQUksQ0FBQyxjQUFjLEdBQUcscUJBQXFCLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztZQUMvRCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztZQUMzQixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztTQUM3QjthQUFNLElBQUksR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLG9CQUFvQjtZQUN0RCxJQUFJLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbkQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7U0FDN0I7YUFBTSxFQUFFLFlBQVk7WUFDbkIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1NBQzVCO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxtREFBaUI7Ozs7SUFBakIsVUFBa0IsY0FBdUI7UUFDdkMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUNwRSxDQUFDOztnQkFoQ0osU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxVQUFVO29CQUNwQixvTUFBa0M7aUJBQ3JDOzs7O2dCQU5RLHFCQUFxQjs2Q0FlckIsTUFBTSxTQUFDLHVCQUF1Qjs7SUFxQnZDLDhCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0E1QlksdUJBQXVCOzs7SUFDaEMsaURBQWdDOztJQUNoQyxpREFBZ0M7O0lBQ2hDLGtEQUFpQzs7Ozs7SUFHN0Isd0RBQW9EOzs7OztJQUNwRCwyREFBeUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXV0aGVudGljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9hdXRoLnNlcnZpY2UnO1xuaW1wb3J0IHsgQVVUSFRJQ0FUSU9OX0lOVEVSRkFDRVMgfSBmcm9tICcuL3Rva2Vucyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYXBwLWF1dGgnLFxuICAgIHRlbXBsYXRlVXJsOiAnYXV0aC5jb21wb25lbnQuaHRtbCdcbn0pXG5cbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbkNvbXBvbmVudCB7XG4gICAgYWRtaW5JbnRlcmZhY2U6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICB1c2VySW50RW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGFkbWluSW50RW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgYXV0aGVudGljYXRpb25TZXJ2aWNlOiBBdXRoZW50aWNhdGlvblNlcnZpY2UsXG4gICAgICAgIEBJbmplY3QoQVVUSFRJQ0FUSU9OX0lOVEVSRkFDRVMpIHByaXZhdGUgYXV0aGVudGljYXRpb25JbnRlcmZhY2VzOiBzdHJpbmdcbiAgICAgICAgKSB7XG4gICAgICBcbiAgICAgIGxldCBzdHIgPSBhdXRoZW50aWNhdGlvbkludGVyZmFjZXMudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmIChzdHIuaW5jbHVkZXMoXCJ1c2VyXCIpICYmIHN0ci5pbmNsdWRlcyhcImFkbWluXCIpICkgey8vYm90aCBpbnRlcmZhY2UuIENoZWNrIGNhY2hlZC5cbiAgICAgICAgdGhpcy5hZG1pbkludGVyZmFjZSA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5pc0FkbWluSW50ZXJmYWNlKCk7XG4gICAgICAgIHRoaXMudXNlckludEVuYWJsZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmFkbWluSW50RW5hYmxlZCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHN0ci5pbmNsdWRlcyhcImFkbWluXCIpKSB7IC8vYWRtaW5pc3RyYXRvciBvbmx5XG4gICAgICAgIHRoaXMuYXV0aGVudGljYXRpb25TZXJ2aWNlLnNldEFkbWluSW50ZXJmYWNlKHRydWUpO1xuICAgICAgICB0aGlzLmFkbWluSW50RW5hYmxlZCA9IHRydWU7XG4gICAgICB9IGVsc2UgeyAvL3VzZXJzIG9ubHlcbiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblNlcnZpY2Uuc2V0QWRtaW5JbnRlcmZhY2UoZmFsc2UpO1xuICAgICAgICB0aGlzLnVzZXJJbnRFbmFibGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIFxuICAgIHNldEFkbWluSW50ZXJmYWNlKGFkbWluSW50ZXJmYWNlOiBib29sZWFuKTogdm9pZCB7XG4gICAgICB0aGlzLmFkbWluSW50ZXJmYWNlID0gYWRtaW5JbnRlcmZhY2U7XG4gICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU2VydmljZS5zZXRBZG1pbkludGVyZmFjZSh0aGlzLmFkbWluSW50ZXJmYWNlKTtcbiAgICB9XG59XG4iXX0=